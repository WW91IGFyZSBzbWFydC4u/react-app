[{"D:\\temp_e\\Projects\\React\\mythirdapp\\frontend\\src\\App.js":"1","D:\\temp_e\\Projects\\React\\mythirdapp\\frontend\\src\\reportWebVitals.js":"2","D:\\temp_e\\Projects\\React\\mythirdapp\\frontend\\src\\stores\\UserStore.js":"3","D:\\temp_e\\Projects\\React\\mythirdapp\\frontend\\src\\SubmitButton.js":"4","D:\\temp_e\\Projects\\React\\mythirdapp\\frontend\\src\\LoginForm.js":"5","D:\\temp_e\\Projects\\React\\mythirdapp\\frontend\\src\\InputField.js":"6","D:\\temp_e\\Projects\\React\\mythirdapp\\frontend\\src\\index.js":"7","D:\\temp_e\\Projects\\React\\mythirdapp\\frontend\\src\\spinner.js":"8","D:\\temp_e\\Projects\\React\\mythirdapp\\frontend\\src\\TitleBar.js":"9","D:\\temp_e\\Projects\\React\\mythirdapp\\frontend\\src\\Dashboard\\Overview.js":"10","D:\\temp_e\\Projects\\React\\mythirdapp\\frontend\\src\\Dashboard\\Wallet.js":"11","D:\\temp_e\\Projects\\React\\mythirdapp\\frontend\\src\\Dashboard\\Navbar.js":"12","D:\\temp_e\\Projects\\React\\mythirdapp\\frontend\\src\\Dashboard\\Dashboard.js":"13","D:\\temp_e\\Projects\\React\\mythirdapp\\frontend\\src\\Dashboard\\AppProfile.js":"14"},{"size":3873,"mtime":1610239232440,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":1609535982937,"results":"17","hashOfConfig":"16"},{"size":292,"mtime":1609537158724,"results":"18","hashOfConfig":"16"},{"size":445,"mtime":1609572984411,"results":"19","hashOfConfig":"16"},{"size":3058,"mtime":1610237492603,"results":"20","hashOfConfig":"16"},{"size":614,"mtime":1610162996585,"results":"21","hashOfConfig":"16"},{"size":500,"mtime":1609535982937,"results":"22","hashOfConfig":"16"},{"size":713,"mtime":1610237408267,"results":"23","hashOfConfig":"16"},{"size":418,"mtime":1609637868604,"results":"24","hashOfConfig":"16"},{"size":8723,"mtime":1610239339239,"results":"25","hashOfConfig":"16"},{"size":10727,"mtime":1610240801744,"results":"26","hashOfConfig":"16"},{"size":1156,"mtime":1609963099050,"results":"27","hashOfConfig":"16"},{"size":549,"mtime":1609756793266,"results":"28","hashOfConfig":"16"},{"size":3378,"mtime":1610158925192,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},"7mfa59",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"33"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"33"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"33"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"33"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"33"},"D:\\temp_e\\Projects\\React\\mythirdapp\\frontend\\src\\App.js",["67","68","69","70","71"],"import React from 'react';\nimport { observer } from 'mobx-react';\nimport UserStore from './stores/UserStore';\nimport LoginForm from './LoginForm';\nimport Spinner from './spinner';\nimport './App.scss';\nimport Dashboard from './Dashboard/Dashboard';\nimport Navbar from './Dashboard/Navbar';\nimport TitleBar from './TitleBar';\nimport { BrowserRouter as Router, Route, Switch, Redirect, withRouter } from 'react-router-dom';\nimport Overview from './Dashboard/Overview';\nimport Wallet from './Dashboard/Wallet';\nimport Profile from './Dashboard/AppProfile';\nimport AppProfile from './Dashboard/AppProfile';\nimport { Alert } from 'tabler-react'\n\nclass App extends React.Component {\n  async componentDidMount() {\n    try {\n      let res = await fetch('/isLoggedIn', {\n        method: 'post',\n        headers: {\n          'Accept': 'applcication/json',\n          'Content-Type': 'applcication/json'\n        }\n      });\n\n      let result = await res.json();\n\n      if (result && result.success) {\n        UserStore.loading = false;\n        UserStore.isLoggedIn = true;\n        UserStore.username = result.username;\n      }\n      else {\n        UserStore.loading = false;\n        UserStore.isLoggedIn = false;\n      }\n    }\n    catch (e) {\n      UserStore.loading = false;\n      UserStore.isLoggedIn = false;\n    }\n\n  }\n\n  async doLogout() {\n\n    try {\n      let res = await fetch('/logout', {\n        method: 'post',\n        headers: {\n          'Accept': 'applcication/json',\n          'Content-Type': 'applcication/json'\n        }\n      });\n\n      let result = await res.json();\n\n      if (result && result.success) {\n        UserStore.isLoggedIn = false;\n        UserStore.username = '';\n      }\n    }\n    catch (e) {\n      console.log(e)\n    }\n\n  }\n\n  render() {\n\n    if (UserStore.loading) {\n      return null;\n      return (\n        <div className=\"app\">\n          <div className='loginContainer'>\n            Loading, please wait...\n            <Spinner\n              loading={true} color='#000000'\n            />\n          </div>\n        </div>\n      );\n    }\n\n    else {\n      // HERE YOU \n      if (UserStore.isLoggedIn) {\n        return (\n          <div className=\"all\">\n            <div className=\"content\" id=\"dashboard-content\">\n              <div className=\"titlebar\">\n                <TitleBar />\n              </div>\n              <Router>\n                <div className=\"navbar\">\n                  <Navbar\n                    onClick={() => this.doLogout()}\n                  />\n                </div>\n                <Route path='/' exact component={Overview}><Redirect to=\"/overview\" /></Route>\n                <Route path='/overview' exact component={Overview} />\n                <Route path='/wallet' exact component={Wallet} />\n                <Route path='/profile' exact component={AppProfile} />\n              </Router>\n              <div className=\"footer\">\n                <Alert type=\"danger\" icon=\"alert-triangle\">\n                  2FA Authentication is currently disabled - we are working on a solution!\n                </Alert>\n              </div>\n            </div>\n          </div>\n        );\n      }\n\n      return (\n        <div className=\"app\">\n          <div className=\"login\">\n            <div className=\"container\" ref={ref => (this.container = ref)}>\n              <article class=\"half\">\n                <h1>CryptoWallet</h1>\n                <h2>beta</h2>\n                <div class=\"tabs\">\n                  <span class=\"tab signin active\"><a href=\"#signin\">Sign in</a></span>\n                </div>\n                <div class=\"content\">\n                  <div class=\"signin-cont cont\">\n                    <LoginForm />\n                  </div>\n                </div>\n              </article>\n              <div class=\"half bg\"></div>\n            </div>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nexport default observer(App);\n",["72","73"],"D:\\temp_e\\Projects\\React\\mythirdapp\\frontend\\src\\reportWebVitals.js",[],"D:\\temp_e\\Projects\\React\\mythirdapp\\frontend\\src\\stores\\UserStore.js",[],"D:\\temp_e\\Projects\\React\\mythirdapp\\frontend\\src\\SubmitButton.js",[],"D:\\temp_e\\Projects\\React\\mythirdapp\\frontend\\src\\LoginForm.js",["74","75"],"import React from 'react';\r\nimport InputField from './InputField';\r\nimport SubmitButton from './SubmitButton';\r\nimport UserStore from './stores/UserStore';\r\nimport Spinner from './spinner';\r\n\r\nclass LoginForm extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: '',\r\n      password: '',\r\n      buttonDisabled: false,\r\n      loggingIn: false\r\n    }\r\n  }\r\n\r\n  setInputValue(property, val) {\r\n    val = val.trim();\r\n    console.log(val)\r\n    if (val.length > 50) {\r\n      return;\r\n    }\r\n    this.setState({\r\n      [property]: val\r\n    })\r\n  }\r\n\r\n  resetForm() {\r\n    this.setState({\r\n      //username: '',\r\n      password: '',\r\n      buttonDisabled: false,\r\n    })\r\n  }\r\n\r\n  async doLogin() {\r\n    if (!this.state.username) {\r\n      return;\r\n    }\r\n    if (!this.state.password) {\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      buttonDisabled: true,\r\n      loggingIn: true\r\n    })\r\n\r\n    try {\r\n      let res = await fetch('/login', {\r\n        method: 'post',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          username: this.state.username,\r\n          password: this.state.password\r\n        })\r\n      });\r\n\r\n      let result = await res.json();\r\n      if (result && result.success) {\r\n        UserStore.isLoggedIn = true;\r\n        UserStore.username = result.username;\r\n      }\r\n\r\n      else if (result && result.success === false) {\r\n        this.resetForm();\r\n        alert(result.msg)\r\n      }\r\n    }\r\n    catch (e) {\r\n      console.log(e);\r\n      this.resetForm();\r\n    }\r\n    finally {\r\n      this.setState({\r\n        loggingIn: false\r\n      })\r\n    }\r\n  }\r\n\r\n  checkEnter(e) {\r\n    if (e.key == 'Enter') {\r\n      this.doLogin()\r\n    }\r\n    else {\r\n    }\r\n    return;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"loginForm\">\r\n        <InputField\r\n          type='email'\r\n          id='email'\r\n          name='email'\r\n          placeholder='Your Username'\r\n          value={this.state.username ? this.state.username : ''}\r\n          onChange={(val) => this.setInputValue('username', val)}\r\n          onKeyPress={(e) => { return }}\r\n        />\r\n\r\n        <InputField\r\n          type='password'\r\n          id='password'\r\n          name='password'\r\n          placeholder='Your Password'\r\n          value={this.state.password ? this.state.password : ''}\r\n          onChange={(val) => this.setInputValue('password', val)}\r\n          onKeyPress={(e) => this.checkEnter(e)}\r\n        />\r\n\r\n        <input type=\"checkbox\" id=\"remember\" class=\"checkbox\" checked />\r\n        <label for=\"remember\">Remember me</label>\r\n\r\n        <SubmitButton\r\n          text='Sign In'\r\n          disabled={this.state.buttonDisabled}\r\n          onClick={() => this.doLogin()}\r\n        />\r\n\r\n        <a href=\"#\" class=\"more\">Forgot your password?</a>\r\n\r\n        <Spinner\r\n          loading={this.state.loggingIn} color=\"#022ea8\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginForm;\r\n","D:\\temp_e\\Projects\\React\\mythirdapp\\frontend\\src\\InputField.js",[],["76","77"],"D:\\temp_e\\Projects\\React\\mythirdapp\\frontend\\src\\index.js",[],"D:\\temp_e\\Projects\\React\\mythirdapp\\frontend\\src\\spinner.js",[],"D:\\temp_e\\Projects\\React\\mythirdapp\\frontend\\src\\TitleBar.js",["78"],"import React from 'react';\r\n\r\n\r\nclass TitleBar extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.onClick = this.props.onClick;\r\n    }\r\n    render() {\r\n        return (\r\n        <div class=\"title\" id=\"title\">\r\n            <img src='./cryptowallet_d_gr.png' width=\"40\" height=\"40\"/>\r\n            <h1>CryptoWallet</h1>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TitleBar;","D:\\temp_e\\Projects\\React\\mythirdapp\\frontend\\src\\Dashboard\\Overview.js",["79","80","81"],"import React, { Component } from \"react\";\r\nimport { Table, Card, Grid, StatsCard, Icon } from 'tabler-react';\r\nimport { ChevronsRight, ChevronsLeft } from 'react-feather';\r\nimport C3Chart from \"react-c3js\";\r\nimport 'c3/c3.css';\r\nimport './Dashboard.scss';\r\n\r\nconst data = {\r\n    x: 'x',\r\n    xFormat: '%Y-%m-%dT%H:%M:%S.%LZ',\r\n    columns: [\r\n    ],\r\n};\r\n\r\nconst axis = {\r\n    x: {\r\n        type: 'timeseries',\r\n        tick: {\r\n            count: 10,\r\n            format: '%Y-%m-%d'\r\n        }\r\n    }\r\n};\r\n\r\nclass Overview extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            transactions: {\r\n                amount: [],\r\n                type: [],\r\n                address: []\r\n            },\r\n            usdbtc: 0,\r\n            walletvalue: 0,\r\n            totalbtc: 0.0\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            let res = await fetch('/overview', {\r\n                method: 'post',\r\n                headers: {\r\n                    'Accept': 'applcication/json',\r\n                    'Content-Type': 'applcication/json'\r\n                }\r\n            });\r\n\r\n            let result = await res.json();\r\n            console.log('start btc calc')\r\n            for (var i = 0; i < result.data.length; i++) {\r\n                this.state.transactions.amount.push(result.data[i].amount)\r\n                this.state.transactions.type.push(result.data[i].type)\r\n                this.state.transactions.address.push(result.data[i].address)\r\n\r\n                if (result.data[i].type == 1) {\r\n                    this.state.totalbtc += result.data[i].amount\r\n                }\r\n                else {\r\n                    this.state.totalbtc -= result.data[i].amount\r\n                }\r\n                console.log(this.state.totalbtc)\r\n            }\r\n            console.log('end btc calc')\r\n            console.log('start get conversion')\r\n            let res2 = await fetch('https://blockchain.info/tobtc?currency=USD&value=1')\r\n            let result2 = await res2.json()\r\n            console.log(result2)\r\n            console.log('end get conversion')\r\n            this.state.usdbtc = Number.parseFloat(1 / result2).toFixed(2);\r\n            this.state.walletvalue = Number.parseFloat(this.state.totalbtc * this.state.usdbtc).toFixed(2)\r\n            this.forceUpdate();\r\n            console.log('start get chartvalues')\r\n            let res3 = await fetch('/usdbtc', {\r\n                method: 'post',\r\n                headers: {\r\n                    'Accept': 'applcication/json',\r\n                    'Content-Type': 'applcication/json'\r\n                }\r\n            });\r\n\r\n            let result3 = await res3.json();\r\n\r\n            var datetimeArr = ['x']\r\n            var rateArr = ['USD']\r\n\r\n            for (var j = 0; j < result3.data.length; j++) {\r\n                datetimeArr.push(result3.data[j].date)\r\n                rateArr.push(result3.data[j].rate)\r\n            }\r\n\r\n            data.columns.push(datetimeArr)\r\n            data.columns.push(rateArr)\r\n\r\n            console.log('end get chartvalues')\r\n\r\n            this.forceUpdate();\r\n        }\r\n        catch (e) {\r\n            console.log('exc')\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"dashboard\">\r\n                <div className=\"mainChart\">\r\n                    <div className=\"walletValue\">\r\n                        <Card\r\n                            title=\"BTC Value\"\r\n                            body={\r\n                                <C3Chart data={data} axis={axis} />\r\n                            }\r\n                        />\r\n                    </div>\r\n                    <div className=\"transactions\">\r\n                        <Card\r\n                            title=\"Most Recent Transactions\"\r\n                        >\r\n                            <Table id=\"dynamictable\"\r\n                                highlightRowOnHover={true}\r\n                                headerItems={[{ content: \"Amount\" }, { content: \"Type\" }, { content: \"Address\" }]}\r\n                                bodyItems={\r\n                                    [\r\n                                        {\r\n                                            item: [\r\n                                                { content: this.state.transactions.amount[0] + \" BTC\" },\r\n                                                { content: this.state.transactions.type[0] ? <ChevronsLeft color=\"green\" /> : <ChevronsRight color=\"red\" /> },\r\n                                                { content: this.state.transactions.address[0] },\r\n                                            ],\r\n                                        },\r\n                                        {\r\n                                            item: [\r\n                                                { content: this.state.transactions.amount[1] + \" BTC\" },\r\n                                                { content: this.state.transactions.type[1] ? <ChevronsLeft color=\"green\" /> : <ChevronsRight color=\"red\" /> },\r\n                                                { content: this.state.transactions.address[1] },\r\n                                            ],\r\n                                        },\r\n                                        {\r\n                                            item: [\r\n                                                { content: this.state.transactions.amount[2] + \" BTC\" },\r\n                                                { content: this.state.transactions.type[2] ? <ChevronsLeft color=\"green\" /> : <ChevronsRight color=\"red\" /> },\r\n                                                { content: this.state.transactions.address[2] },\r\n                                            ],\r\n                                        },\r\n                                        {\r\n                                            item: [\r\n                                                { content: this.state.transactions.amount[3] + \" BTC\" },\r\n                                                { content: this.state.transactions.type[3] ? <ChevronsLeft color=\"green\" /> : <ChevronsRight color=\"red\" /> },\r\n                                                { content: this.state.transactions.address[3] },\r\n                                            ],\r\n                                        },\r\n                                        {\r\n                                            item: [\r\n                                                { content: this.state.transactions.amount[4] + \" BTC\" },\r\n                                                { content: this.state.transactions.type[4] ? <ChevronsLeft color=\"green\" /> : <ChevronsRight color=\"red\" /> },\r\n                                                { content: this.state.transactions.address[4] },\r\n                                            ],\r\n                                        },\r\n                                        {\r\n                                            item: [\r\n                                                { content: this.state.transactions.amount[5] + \" BTC\" },\r\n                                                { content: this.state.transactions.type[5] ? <ChevronsLeft color=\"green\" /> : <ChevronsRight color=\"red\" /> },\r\n                                                { content: this.state.transactions.address[5] },\r\n                                            ],\r\n                                        },\r\n                                    ]\r\n                                }\r\n                            />\r\n                        </Card>\r\n                    </div>\r\n                </div>\r\n                <Card\r\n                    title=\"Stats\"\r\n                    body={\r\n                        <div className=\"substats\">\r\n                            <Grid.Row cards>\r\n                                <Grid.Col>\r\n                                    <StatsCard layout={1} movement={0} total={this.state.usdbtc} label=\"USD/BTC\" />\r\n                                </Grid.Col>\r\n                                <Grid.Col>\r\n                                    <StatsCard layout={1} movement={0} total={this.state.walletvalue + \" $\"} label=\"Wallet Value\" />\r\n                                </Grid.Col>\r\n                                <Grid.Col>\r\n                                    <StatsCard layout={1} movement={0} total={this.state.totalbtc.toFixed(8)} label=\"Total BTC in Wallet\" />\r\n                                </Grid.Col>\r\n                            </Grid.Row>\r\n                        </div>\r\n                    }\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Overview;","D:\\temp_e\\Projects\\React\\mythirdapp\\frontend\\src\\Dashboard\\Wallet.js",["82","83"],"D:\\temp_e\\Projects\\React\\mythirdapp\\frontend\\src\\Dashboard\\Navbar.js",["84","85","86","87"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Nav } from \"tabler-react\";\r\nimport { NavLink, withRouter } from \"react-router-dom\";\r\n\r\nclass Navbar extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.onClick = this.props.onClick;\r\n        this.active = '/overview';\r\n    }\r\n\r\n\r\n    isActive(elem) {\r\n        if (elem == window.location.pathname)\r\n            return true;\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Nav\r\n                items={\r\n                    <React.Fragment>\r\n                        <Nav.Item active={this.isActive('/overview')} to=\"/overview\" value=\"Overview\" icon=\"globe\" />\r\n                        <Nav.Item active={this.isActive('/wallet')} to=\"/wallet\" value=\"Wallet\" icon=\"credit-card\" />\r\n                        <Nav.Item active={this.isActive('/profile')} to=\"/profile\" value=\"Profile\" icon=\"user\" />\r\n                        <Nav.Item to=\"/\" value=\"Logout\" onClick={() => this.onClick()} icon=\"log-out\" />\r\n                    </React.Fragment>\r\n                }\r\n            />);\r\n    }\r\n}\r\n\r\nexport default Navbar;","D:\\temp_e\\Projects\\React\\mythirdapp\\frontend\\src\\Dashboard\\Dashboard.js",["88","89","90","91","92"],"import React, { Component } from \"react\";\r\nimport \"tabler-react/dist/Tabler.css\";\r\nimport './Dashboard.scss';\r\nimport Overview from './Overview';\r\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\r\n\r\nclass Dashboard extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.location = window.location.pathname\r\n        this.onClick = this.props.onClick;\r\n    }\r\n    \r\n\r\n  render() {\r\n    return (\r\n      <div className=\"dashboard-main\">\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;\r\n","D:\\temp_e\\Projects\\React\\mythirdapp\\frontend\\src\\Dashboard\\AppProfile.js",["93"],"import React, { Component } from \"react\";\r\nimport { Card, Form } from 'tabler-react';\r\n\r\nclass AppProfile extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            firstname: \"\",\r\n            lastname: \"\",\r\n            mail: \"\",\r\n            phone: \"\",\r\n            creationdate: \"\",\r\n            birthday: \"\",\r\n            walletSec: \"\"\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            let res = await fetch('/profile', {\r\n                method: 'post',\r\n                headers: {\r\n                    'Accept': 'applcication/json',\r\n                    'Content-Type': 'applcication/json'\r\n                }\r\n            });\r\n\r\n            let result = await res.json();\r\n\r\n            console.log('profile')\r\n            if (result.success) {\r\n\r\n                this.setState({ firstname: result.data[0].firstname })\r\n                this.setState({ lastname: result.data[0].lastname })\r\n                this.setState({ mail: result.data[0].mail })\r\n                this.setState({ phone: result.data[0].phone })\r\n                this.setState({ creationdate: result.data[0].creationdate })\r\n                this.setState({ birthday: result.data[0].birthday })\r\n                this.setState({ walletSec: result.data[0].walletsec })\r\n\r\n                console.log(this.state)\r\n\r\n            }\r\n\r\n            this.forceUpdate();\r\n        }\r\n        catch (e) {\r\n            console.log('exc')\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"dashboard\">\r\n                <Card>\r\n                    <Card.Status color=\"blue\" side />\r\n                    <Card.Header>\r\n                        <Card.Title>Profile</Card.Title>\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        <Form>\r\n                            <Form.Input name=\"firstname\" label=\"First Name\" value={this.state.firstname} disabled isInline />\r\n                            <Form.Input name=\"lastname\" label=\"Last Name\" value={this.state.lastname} disabled isInline />\r\n                            <Form.Input name=\"email\" label=\"E-Mail\" icon=\"mail\" value={this.state.mail} disabled />\r\n                            <Form.Input name=\"phone\" label=\"Phone Number\" id=\"Phone Number\" icon=\"phone\" value={this.state.phone} disabled />\r\n                            <Form.Input name=\"registerDate\" label=\"Registered since\" icon=\"log-in\" disabled value={this.state.creationdate.substring(0,10)} />\r\n                            <Form.Input name=\"birthday\" label=\"Birthday\" disabled value={this.state.birthday.substring(0,10)} />\r\n                        </Form>\r\n                    </Card.Body>\r\n                </Card>\r\n                <Card>\r\n                    <Card.Status color=\"yellow\" side />\r\n                    <Card.Header>\r\n                        <Card.Title>Wallet Security</Card.Title>\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        <Form>\r\n                            <Form.Input name=\"withdrawalThreshold\" label=\"Withdrawal Threshold\" value={this.state.walletSec} icon=\"lock\" disabled isInline />\r\n                        </Form>\r\n                    </Card.Body>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AppProfile;",{"ruleId":"94","severity":1,"message":"95","line":7,"column":8,"nodeType":"96","messageId":"97","endLine":7,"endColumn":17},{"ruleId":"94","severity":1,"message":"98","line":10,"column":42,"nodeType":"96","messageId":"97","endLine":10,"endColumn":48},{"ruleId":"94","severity":1,"message":"99","line":10,"column":60,"nodeType":"96","messageId":"97","endLine":10,"endColumn":70},{"ruleId":"94","severity":1,"message":"100","line":13,"column":8,"nodeType":"96","messageId":"97","endLine":13,"endColumn":15},{"ruleId":"101","severity":1,"message":"102","line":75,"column":7,"nodeType":"103","messageId":"104","endLine":84,"endColumn":9},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":87,"column":15,"nodeType":"111","messageId":"112","endLine":87,"endColumn":17},{"ruleId":"113","severity":1,"message":"114","line":127,"column":9,"nodeType":"115","endLine":127,"endColumn":34},{"ruleId":"105","replacedBy":"116"},{"ruleId":"107","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":12,"column":13,"nodeType":"115","endLine":12,"endColumn":72},{"ruleId":"94","severity":1,"message":"120","line":1,"column":17,"nodeType":"96","messageId":"97","endLine":1,"endColumn":26},{"ruleId":"94","severity":1,"message":"121","line":2,"column":40,"nodeType":"96","messageId":"97","endLine":2,"endColumn":44},{"ruleId":"109","severity":1,"message":"110","line":57,"column":41,"nodeType":"111","messageId":"112","endLine":57,"endColumn":43},{"ruleId":"94","severity":1,"message":"95","line":2,"column":8,"nodeType":"96","messageId":"97","endLine":2,"endColumn":17},{"ruleId":"109","severity":1,"message":"110","line":63,"column":41,"nodeType":"111","messageId":"112","endLine":63,"endColumn":43},{"ruleId":"94","severity":1,"message":"122","line":2,"column":10,"nodeType":"96","messageId":"97","endLine":2,"endColumn":14},{"ruleId":"94","severity":1,"message":"123","line":4,"column":10,"nodeType":"96","messageId":"97","endLine":4,"endColumn":17},{"ruleId":"94","severity":1,"message":"99","line":4,"column":19,"nodeType":"96","messageId":"97","endLine":4,"endColumn":29},{"ruleId":"109","severity":1,"message":"110","line":15,"column":18,"nodeType":"111","messageId":"112","endLine":15,"endColumn":20},{"ruleId":"94","severity":1,"message":"120","line":1,"column":17,"nodeType":"96","messageId":"97","endLine":1,"endColumn":26},{"ruleId":"94","severity":1,"message":"124","line":4,"column":8,"nodeType":"96","messageId":"97","endLine":4,"endColumn":16},{"ruleId":"94","severity":1,"message":"125","line":5,"column":26,"nodeType":"96","messageId":"97","endLine":5,"endColumn":32},{"ruleId":"94","severity":1,"message":"126","line":5,"column":34,"nodeType":"96","messageId":"97","endLine":5,"endColumn":39},{"ruleId":"94","severity":1,"message":"98","line":5,"column":41,"nodeType":"96","messageId":"97","endLine":5,"endColumn":47},{"ruleId":"94","severity":1,"message":"120","line":1,"column":17,"nodeType":"96","messageId":"97","endLine":1,"endColumn":26},"no-unused-vars","'Dashboard' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'withRouter' is defined but never used.","'Profile' is defined but never used.","no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","no-native-reassign",["127"],"no-negated-in-lhs",["128"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["127"],["128"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Component' is defined but never used.","'Icon' is defined but never used.","'Link' is defined but never used.","'NavLink' is defined but never used.","'Overview' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","no-global-assign","no-unsafe-negation"]