[{"D:\\temp_e\\Projects\\React\\mythirdapp\\frontend\\src\\App.js":"1","D:\\temp_e\\Projects\\React\\mythirdapp\\frontend\\src\\reportWebVitals.js":"2","D:\\temp_e\\Projects\\React\\mythirdapp\\frontend\\src\\stores\\UserStore.js":"3","D:\\temp_e\\Projects\\React\\mythirdapp\\frontend\\src\\SubmitButton.js":"4","D:\\temp_e\\Projects\\React\\mythirdapp\\frontend\\src\\LoginForm.js":"5","D:\\temp_e\\Projects\\React\\mythirdapp\\frontend\\src\\InputField.js":"6","D:\\temp_e\\Projects\\React\\mythirdapp\\frontend\\src\\index.js":"7","D:\\temp_e\\Projects\\React\\mythirdapp\\frontend\\src\\spinner.js":"8","D:\\temp_e\\Projects\\React\\mythirdapp\\frontend\\src\\TitleBar.js":"9","D:\\temp_e\\Projects\\React\\mythirdapp\\frontend\\src\\Dashboard\\Overview.js":"10","D:\\temp_e\\Projects\\React\\mythirdapp\\frontend\\src\\Dashboard\\Wallet.js":"11","D:\\temp_e\\Projects\\React\\mythirdapp\\frontend\\src\\Dashboard\\Navbar.js":"12","D:\\temp_e\\Projects\\React\\mythirdapp\\frontend\\src\\Dashboard\\Dashboard.js":"13","D:\\temp_e\\Projects\\React\\mythirdapp\\frontend\\src\\Dashboard\\AppProfile.js":"14"},{"size":3826,"mtime":1610062508915,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":1609535982937,"results":"17","hashOfConfig":"16"},{"size":292,"mtime":1609537158724,"results":"18","hashOfConfig":"16"},{"size":445,"mtime":1609572984411,"results":"19","hashOfConfig":"16"},{"size":2939,"mtime":1610061822828,"results":"20","hashOfConfig":"16"},{"size":558,"mtime":1609566464654,"results":"21","hashOfConfig":"16"},{"size":500,"mtime":1609535982937,"results":"22","hashOfConfig":"16"},{"size":661,"mtime":1609565637502,"results":"23","hashOfConfig":"16"},{"size":418,"mtime":1609637868604,"results":"24","hashOfConfig":"16"},{"size":3607,"mtime":1610049040247,"results":"25","hashOfConfig":"16"},{"size":7624,"mtime":1610019822265,"results":"26","hashOfConfig":"16"},{"size":1156,"mtime":1609963099050,"results":"27","hashOfConfig":"16"},{"size":549,"mtime":1609756793266,"results":"28","hashOfConfig":"16"},{"size":1880,"mtime":1609964695312,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"7mfa59",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"34"},"D:\\temp_e\\Projects\\React\\mythirdapp\\frontend\\src\\App.js",["67","68","69"],"D:\\temp_e\\Projects\\React\\mythirdapp\\frontend\\src\\reportWebVitals.js",[],["70","71"],"D:\\temp_e\\Projects\\React\\mythirdapp\\frontend\\src\\stores\\UserStore.js",[],"D:\\temp_e\\Projects\\React\\mythirdapp\\frontend\\src\\SubmitButton.js",[],["72","73"],"D:\\temp_e\\Projects\\React\\mythirdapp\\frontend\\src\\LoginForm.js",["74"],"import React from 'react';\r\nimport InputField from './InputField';\r\nimport SubmitButton from './SubmitButton';\r\nimport UserStore from './stores/UserStore';\r\nimport Spinner from './spinner';\r\n\r\nclass LoginForm extends React.Component{\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      username: '',\r\n      password: '',\r\n      buttonDisabled: false,\r\n      loggingIn: false\r\n    }\r\n  }\r\n\r\n  setInputValue (property, val) {\r\n    val = val.trim();\r\n    if (val.length > 50) {\r\n      return;\r\n    }\r\n    this.setState ({\r\n      [property]: val\r\n    })\r\n  }\r\n\r\n  resetForm(){\r\n    this.setState({\r\n      username: '',\r\n      password: '',\r\n      buttonDisabled: false,\r\n    })\r\n  }\r\n\r\n  async doLogin() {\r\n    if(!this.state.username) {\r\n      return;\r\n    }\r\n    if(!this.state.password) {\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      buttonDisabled: true,\r\n      loggingIn:true\r\n    })\r\n\r\n    try {\r\n        let res = await fetch('/login', {\r\n          method: 'post',\r\n          headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({\r\n            username: this.state.username,\r\n            password: this.state.password\r\n          })\r\n        });\r\n\r\n        let result = await res.json();\r\n        if (result && result.success) {\r\n          UserStore.isLoggedIn = true;\r\n          UserStore.username = result.username;\r\n        }\r\n\r\n        else if (result && result.success === false) {\r\n          this.resetForm();\r\n          alert(result.msg)\r\n        }\r\n    }\r\n    catch(e) {\r\n      console.log(e);\r\n      this.resetForm();\r\n    }\r\n    finally{\r\n      this.setState({\r\n        loggingIn:false\r\n      })\r\n    }\r\n  }\r\n\r\n  render(){\r\n    return (\r\n        <div className=\"loginForm\">\r\n          <InputField\r\n            type='email'\r\n            id = 'email'\r\n            name = 'email'\r\n            placeholder = 'Your Username'\r\n            value={this.state.username ? this.state.username : ''}\r\n            onChange={(val) => this.setInputValue('username', val)}\r\n          />\r\n\r\n          <InputField\r\n            type='password'\r\n            id = 'password'\r\n            name = 'password'\r\n            placeholder = 'Your Password'\r\n            value={this.state.password ? this.state.password : ''}\r\n            onChange={(val) => this.setInputValue('password', val)}\r\n          />\r\n          \r\n          <input type=\"checkbox\" id=\"remember\" class=\"checkbox\" checked/>\r\n          <label for=\"remember\">Remember me</label>\r\n          \r\n          <SubmitButton\r\n              text='Sign In'\r\n              disabled={this.state.buttonDisabled}\r\n              onClick={() => this.doLogin()}\r\n          />\r\n\r\n          <a href=\"#\" class=\"more\">Forgot your password?</a>\r\n\r\n          <Spinner\r\n            loading={this.state.loggingIn}\r\n          />\r\n        </div>\r\n    );  \r\n  }\r\n}\r\n\r\nexport default LoginForm;\r\n","D:\\temp_e\\Projects\\React\\mythirdapp\\frontend\\src\\InputField.js",[],"D:\\temp_e\\Projects\\React\\mythirdapp\\frontend\\src\\index.js",[],"D:\\temp_e\\Projects\\React\\mythirdapp\\frontend\\src\\spinner.js",[],"D:\\temp_e\\Projects\\React\\mythirdapp\\frontend\\src\\TitleBar.js",["75"],"import React from 'react';\r\n\r\n\r\nclass TitleBar extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.onClick = this.props.onClick;\r\n    }\r\n    render() {\r\n        return (\r\n        <div class=\"title\" id=\"title\">\r\n            <img src='./cryptowallet_d_gr.png' width=\"40\" height=\"40\"/>\r\n            <h1>CryptoWallet</h1>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TitleBar;","D:\\temp_e\\Projects\\React\\mythirdapp\\frontend\\src\\Dashboard\\Overview.js",["76"],"import React, { Component } from \"react\";\r\nimport { Table, Card, Grid, StatsCard } from 'tabler-react';\r\nimport C3Chart from \"react-c3js\";\r\nimport 'c3/c3.css';\r\nimport './Dashboard.scss';\r\n\r\n\r\n\r\nconst data = {\r\n    x: 'x',\r\n    xFormat: '%Y-%m-%d',\r\n    columns: [\r\n        ['x', '2013-01-01', '2013-01-02', '2013-01-03', '2013-01-04', '2013-01-05', '2013-01-06'],\r\n        ['data1', 30, 200, 100, 400, 150, 250],\r\n        ['data2', 130, 340, 200, 500, 250, 350]\r\n    ],\r\n};\r\n\r\nconst axis = {\r\n    x: {\r\n        type: 'timeseries',\r\n        tick: {\r\n            format: '%Y-%m-%d'\r\n        }\r\n    }\r\n};\r\n\r\nclass Overview extends React.Component {\r\n    async componentDidMount() {\r\n        console.log(\"mounted\")\r\n        try {\r\n            let res = await fetch('/overview', {\r\n                method: 'post',\r\n                headers: {\r\n                    'Accept': 'applcication/json',\r\n                    'Content-Type': 'applcication/json'\r\n                }\r\n            });\r\n            let result = await res.json();\r\n            console.log(result.success)\r\n\r\n        }\r\n        catch (e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"dashboard\">\r\n                <div className=\"mainChart\">\r\n                    <div className=\"walletValue\">\r\n                        <Card\r\n                            title=\"Wallet Value\"\r\n                            body={\r\n                                <C3Chart data={data} axis={axis} />\r\n                            }\r\n                        />\r\n                    </div>\r\n                    <div className=\"transactions\">\r\n                        <Card>\r\n                            <Table highlightRowOnHover={true}>\r\n                                <Table.Header>\r\n                                    <Table.ColHeader>Amount</Table.ColHeader>\r\n                                    <Table.ColHeader>Transaction Type</Table.ColHeader>\r\n                                    <Table.ColHeader>Address</Table.ColHeader>\r\n                                </Table.Header>\r\n                                <Table.Body>\r\n                                    <Table.Row>\r\n                                        <Table.Col><i>0.04</i></Table.Col>\r\n                                        <Table.Col>inc</Table.Col>\r\n                                        <Table.Col>bc1qm*hz0av</Table.Col>\r\n                                    </Table.Row>\r\n                                </Table.Body>\r\n                            </Table>\r\n                        </Card>\r\n                    </div>\r\n                </div>\r\n                <Card\r\n                    title=\"Stats\"\r\n                    body={\r\n                        <div className=\"substats\">\r\n                            <Grid.Row cards>\r\n                                <Grid.Col>\r\n                                    <StatsCard layout={1} movement={5} total={30583 + \" $\"} label=\"USD/BTC\" />\r\n                                </Grid.Col>\r\n                                <Grid.Col>\r\n                                    <StatsCard layout={1} movement={0} total={42384 + \" $\"} label=\"Wallet Value\" />\r\n                                </Grid.Col>\r\n                                <Grid.Col>\r\n                                    <StatsCard layout={1} movement={0} total={1.72542} label=\"Total BTC in Wallet\" />\r\n                                </Grid.Col>\r\n                            </Grid.Row>\r\n                        </div>\r\n                    }\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Overview;","D:\\temp_e\\Projects\\React\\mythirdapp\\frontend\\src\\Dashboard\\Wallet.js",["77"],"import React from \"react\";\r\nimport Dashboard from './Dashboard';\r\nimport './Dashboard.scss';\r\nimport { Table, Button, Form } from 'tabler-react';\r\nimport { Modal } from 'react-bootstrap';\r\n\r\nclass Wallet extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.value = 1;\r\n        this.USDexchange = 27000;\r\n        this.modalShow = false;\r\n        this.modalShowWD = false;\r\n        this.state = {\r\n            fields: {}\r\n        }\r\n    }\r\n\r\n    onWDsubmit = (event) => {\r\n        event.preventDefault();\r\n        let fields = this.state.fields;\r\n\r\n        console.log(fields['address'])\r\n        console.log(/^(bc1|[13])[a-zA-HJ-NP-Z0-9]{25,39}$/.test(fields['address']))\r\n        console.log(fields['amount'])\r\n        console.log(/^\\d+(.\\d+)*$/.test(fields['amount']))\r\n\r\n        // Address\r\n        if (!/^(bc1|[13])[a-zA-HJ-NP-Z0-9]{25,39}$/.test(fields['address'])) {\r\n            // Reset Address\r\n            alert('Enter a valid BTC Address')\r\n            return;\r\n        }\r\n\r\n        if (!/^\\d+(.\\d+)*$/.test(fields['amount'])) {\r\n            alert('Enter a valid numeric amount to pay out')\r\n            return;\r\n        }\r\n\r\n        document.getElementById(\"divHint\").style.display = \"inline-block\";\r\n\r\n        return;\r\n    }\r\n\r\n    handleChange(field, e) {\r\n        let fields = this.state.fields;\r\n        fields[field] = e.target.value;\r\n        this.setState({ fields });\r\n    }\r\n\r\n    switchModalShow() {\r\n        this.modalShow = !this.modalShow;\r\n        console.log(\"modalshow = \" + this.modalShow)\r\n        this.forceUpdate();\r\n        return;\r\n    }\r\n\r\n    switchModalWDShow() {\r\n        this.modalShowWD = !this.modalShowWD;\r\n        console.log(\"modalshow = \" + this.modalShowWD)\r\n        this.forceUpdate();\r\n        return;\r\n    }\r\n\r\n    USD(value, USDexchange) {\r\n        return value * USDexchange;\r\n    }\r\n\r\n    render() {\r\n        console.log('render called')\r\n        return (\r\n            <div className=\"dashboard\">\r\n                <div className=\"table\">\r\n                    <Table highlightRowOnHover={true}>\r\n                        <Table.Header>\r\n                            <Table.ColHeader>Type</Table.ColHeader>\r\n                            <Table.ColHeader>Friendly Name</Table.ColHeader>\r\n                            <Table.ColHeader>Address</Table.ColHeader>\r\n                            <Table.ColHeader>Value</Table.ColHeader>\r\n                            <Table.ColHeader>Value in USD</Table.ColHeader>\r\n                            <Table.ColHeader>Actions</Table.ColHeader>\r\n                        </Table.Header>\r\n                        <Table.Body>\r\n                            <Table.Row>\r\n                                <Table.Col>\r\n                                    <h4>BTC</h4>\r\n                                </Table.Col>\r\n                                <Table.Col>Long-Time-Storage</Table.Col>\r\n                                <Table.Col>bc1qm6qv2jdgjmt4krahrw9wpcyt5mmt7g8h5hz0av</Table.Col>\r\n                                <Table.Col>{this.value} BTC</Table.Col>\r\n                                <Table.Col>{this.USD(this.value, this.USDexchange)} $</Table.Col>\r\n                                <Table.Col>\r\n                                    <Button onClick={() => this.switchModalShow()} color=\"primary\">Deposit</Button>\r\n                                    <Button onClick={() => this.switchModalWDShow()} color=\"secondary\">Withdraw</Button>\r\n                                </Table.Col>\r\n                            </Table.Row>\r\n                        </Table.Body>\r\n                    </Table>\r\n                    <h4>Approved Addresses</h4>\r\n                    <Table>\r\n                        <Table.Header>\r\n                            <Table.ColHeader>Address</Table.ColHeader>\r\n                            <Table.ColHeader>Approval Date</Table.ColHeader>\r\n                        </Table.Header>\r\n                        <Table.Body>\r\n                            <Table.Row>\r\n                                <Table.Col>bc1qm6****5884</Table.Col>\r\n                                <Table.Col>2019-10-10</Table.Col>\r\n                            </Table.Row>\r\n                        </Table.Body>\r\n                    </Table>\r\n                </div>\r\n                <div classname=\"modalD\" >\r\n                    <Modal show={this.modalShow} aria-labelledby=\"contained-modal-title-vcenter\">\r\n                        <Modal.Header>\r\n                            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                                Deposit to Wallet\r\n                            </Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <p>To deposit to this wallet, please use the following address:</p>\r\n                            <p><b>bc1qm6qv2jdgjmt4krahrw9wpcyt5mmt7g8h5hz0av</b></p>\r\n                            <p> </p>\r\n                            <p>Note: For safety reasons it is required to deposit a set amount of BTC to enable withdrawing to a new address.</p>\r\n                            <p>This process only needs to be done once.</p>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button onClick={() => this.switchModalShow()}>Close</Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n                </div>\r\n                <div classname=\"modalWD\" >\r\n                    <Modal show={this.modalShowWD} aria-labelledby=\"contained-modal-title-vcenter\">\r\n                        <Modal.Header>\r\n                            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                                Withdraw from Wallet\r\n                            </Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <div classname=\"withdrawalForm\">\r\n                                <Form onSubmit={this.onWDsubmit.bind(this)}>\r\n                                    <Form.FieldSet>\r\n                                        <Form.Input id=\"address\" name=\"address\" label=\"Address\" placeholder=\"Receiving Address\" maxLength=\"35\" icon=\"credit-card\" type=\"text\"\r\n                                            onChange={this.handleChange.bind(this, \"address\")} />\r\n                                        <Form.Input id=\"amount\" name=\"amount\" label=\"Amount\" placeholder=\"(BTC) Withdrawal Amount\" icon=\"dollar-sign\"\r\n                                            onChange={this.handleChange.bind(this, \"amount\")} required />\r\n                                        <Button name=\"submit\" type=\"submit\" color=\"primary\">Withdraw</Button>\r\n                                    </Form.FieldSet>\r\n                                    <div id=\"divHint\">\r\n                                        <p>For safety reasons it is required to approve new addresses before withdrawing is allowed.</p>\r\n                                        <p>A new address is approved by a deposit surpassing the configured limit (0.02 BTC).</p>\r\n                                        <p><b>Approved Addresses have no withdrawal limit.</b></p>\r\n                                    </div>\r\n                                </Form>\r\n                            </div>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button onClick={() => this.switchModalWDShow()}>Close</Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Wallet;","D:\\temp_e\\Projects\\React\\mythirdapp\\frontend\\src\\Dashboard\\Navbar.js",["78","79","80","81"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Nav } from \"tabler-react\";\r\nimport { NavLink, withRouter } from \"react-router-dom\";\r\n\r\nclass Navbar extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.onClick = this.props.onClick;\r\n        this.active = '/overview';\r\n    }\r\n\r\n\r\n    isActive(elem) {\r\n        if (elem == window.location.pathname)\r\n            return true;\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Nav\r\n                items={\r\n                    <React.Fragment>\r\n                        <Nav.Item active={this.isActive('/overview')} to=\"/overview\" value=\"Overview\" icon=\"globe\" />\r\n                        <Nav.Item active={this.isActive('/wallet')} to=\"/wallet\" value=\"Wallet\" icon=\"credit-card\" />\r\n                        <Nav.Item active={this.isActive('/profile')} to=\"/profile\" value=\"Profile\" icon=\"user\" />\r\n                        <Nav.Item to=\"/\" value=\"Logout\" onClick={() => this.onClick()} icon=\"log-out\" />\r\n                    </React.Fragment>\r\n                }\r\n            />);\r\n    }\r\n}\r\n\r\nexport default Navbar;","D:\\temp_e\\Projects\\React\\mythirdapp\\frontend\\src\\Dashboard\\Dashboard.js",["82","83","84","85","86"],"import React, { Component } from \"react\";\r\nimport \"tabler-react/dist/Tabler.css\";\r\nimport './Dashboard.scss';\r\nimport Overview from './Overview';\r\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\r\n\r\nclass Dashboard extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.location = window.location.pathname\r\n        this.onClick = this.props.onClick;\r\n    }\r\n    \r\n\r\n  render() {\r\n    return (\r\n      <div className=\"dashboard-main\">\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;\r\n","D:\\temp_e\\Projects\\React\\mythirdapp\\frontend\\src\\Dashboard\\AppProfile.js",["87"],"import React, { Component } from \"react\";\r\nimport { Card, Form } from 'tabler-react';\r\n\r\nclass AppProfile extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"dashboard\">\r\n                <Card>\r\n                    <Card.Status color=\"blue\" side />\r\n                    <Card.Header>\r\n                        <Card.Title>Profile</Card.Title>\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        <Form>\r\n                            <Form.Input name=\"firstname\" label=\"First Name\" value=\"Jacob\" disabled isInline />\r\n                            <Form.Input name=\"lastname\" label=\"Last Name\" value=\"Miller\" disabled isInline />\r\n                            <Form.Input name=\"email\" label=\"E-Mail\" icon=\"mail\" value=\"test@mail.com\" disabled />\r\n                            <Form.Input name=\"phone\" label=\"Phone Number\" id=\"Phone Number\" icon=\"phone\" value=\"0568045685\" disabled />\r\n                            <Form.Input name=\"registerDate\" label=\"Registered since\" icon=\"log-in\" disabled value=\"08.05.2019\" />\r\n                            <Form.Input name=\"birthday\" label=\"Birthday\" disabled value=\"01.01.1970\" />\r\n                        </Form>\r\n                    </Card.Body>\r\n                </Card>\r\n                <Card>\r\n                    <Card.Status color=\"yellow\" side />\r\n                    <Card.Header>\r\n                        <Card.Title>Wallet Security</Card.Title>\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        <Form>\r\n                            <Form.Input name=\"withdrawalThreshold\" label=\"Withdrawal Threshold\" value={0.02 + \" BTC\"} icon=\"lock\" disabled isInline />\r\n                        </Form>\r\n                    </Card.Body>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AppProfile;",{"ruleId":"88","severity":1,"message":"89","line":7,"column":8,"nodeType":"90","messageId":"91","endLine":7,"endColumn":17},{"ruleId":"88","severity":1,"message":"92","line":10,"column":42,"nodeType":"90","messageId":"91","endLine":10,"endColumn":48},{"ruleId":"88","severity":1,"message":"93","line":13,"column":8,"nodeType":"90","messageId":"91","endLine":13,"endColumn":15},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"94","replacedBy":"98"},{"ruleId":"96","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":115,"column":11,"nodeType":"102","endLine":115,"endColumn":36},{"ruleId":"103","severity":1,"message":"104","line":12,"column":13,"nodeType":"102","endLine":12,"endColumn":72},{"ruleId":"88","severity":1,"message":"105","line":1,"column":17,"nodeType":"90","messageId":"91","endLine":1,"endColumn":26},{"ruleId":"88","severity":1,"message":"89","line":2,"column":8,"nodeType":"90","messageId":"91","endLine":2,"endColumn":17},{"ruleId":"88","severity":1,"message":"106","line":2,"column":10,"nodeType":"90","messageId":"91","endLine":2,"endColumn":14},{"ruleId":"88","severity":1,"message":"107","line":4,"column":10,"nodeType":"90","messageId":"91","endLine":4,"endColumn":17},{"ruleId":"88","severity":1,"message":"108","line":4,"column":19,"nodeType":"90","messageId":"91","endLine":4,"endColumn":29},{"ruleId":"109","severity":1,"message":"110","line":15,"column":18,"nodeType":"111","messageId":"112","endLine":15,"endColumn":20},{"ruleId":"88","severity":1,"message":"105","line":1,"column":17,"nodeType":"90","messageId":"91","endLine":1,"endColumn":26},{"ruleId":"88","severity":1,"message":"113","line":4,"column":8,"nodeType":"90","messageId":"91","endLine":4,"endColumn":16},{"ruleId":"88","severity":1,"message":"114","line":5,"column":26,"nodeType":"90","messageId":"91","endLine":5,"endColumn":32},{"ruleId":"88","severity":1,"message":"115","line":5,"column":34,"nodeType":"90","messageId":"91","endLine":5,"endColumn":39},{"ruleId":"88","severity":1,"message":"92","line":5,"column":41,"nodeType":"90","messageId":"91","endLine":5,"endColumn":47},{"ruleId":"88","severity":1,"message":"105","line":1,"column":17,"nodeType":"90","messageId":"91","endLine":1,"endColumn":26},"no-unused-vars","'Dashboard' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Profile' is defined but never used.","no-native-reassign",["116"],"no-negated-in-lhs",["117"],["116"],["117"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Component' is defined but never used.","'Link' is defined but never used.","'NavLink' is defined but never used.","'withRouter' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Overview' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","no-global-assign","no-unsafe-negation"]