{"version":3,"sources":["stores/UserStore.js","InputField.js","SubmitButton.js","spinner.js","LoginForm.js","Dashboard/Overview.js","Dashboard/Navbar.js","Dashboard/Dashboard.js","TitleBar.js","Dashboard/Wallet.js","Dashboard/AppProfile.js","App.js","reportWebVitals.js","index.js"],"names":["extendObservable","this","loading","isLoggedIn","username","InputField","className","name","props","required","id","type","placeholder","value","onChange","e","target","onKeyPress","React","Component","SubmitButton","disabled","onClick","text","override","css","Spinner","state","color","size","LoginForm","password","buttonDisabled","loggingIn","property","val","trim","console","log","length","setState","fetch","method","headers","body","JSON","stringify","res","json","result","success","UserStore","resetForm","alert","msg","key","doLogin","setInputValue","checkEnter","class","checked","for","href","data","x","xFormat","columns","axis","tick","count","format","Overview","transactions","amount","address","usdbtc","walletvalue","totalbtc","i","push","res2","result2","Number","parseFloat","toFixed","forceUpdate","res3","result3","datetimeArr","rateArr","j","date","rate","title","highlightRowOnHover","headerItems","content","bodyItems","item","Row","cards","Col","layout","movement","total","label","Navbar","active","elem","window","location","pathname","items","Fragment","Item","isActive","to","icon","TitleBar","src","width","height","Wallet","onWDsubmit","event","preventDefault","fields","test","document","getElementById","style","display","modalShow","modalShowWD","approved","walletSec","obj","cnt","Object","keys","map","substring","k","approveDate","walletsec","field","USDexchange","Header","ColHeader","Body","switchModalShow","switchModalWDShow","renderApproved","classname","Modal","show","aria-labelledby","Title","Footer","onSubmit","bind","FieldSet","Input","maxLength","handleChange","AppProfile","firstname","lastname","mail","phone","creationdate","birthday","Status","side","isInline","App","doLogout","path","exact","component","ref","container","observer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"oSAgBgB,MATX,aAAe,oBACXA,YAAiBC,KAAM,CACpBC,SAAS,EACTC,YAAY,EACZC,SAAU,M,QCcPC,E,uKArBJ,IAAD,OACN,OACE,qBAAKC,UAAU,aAAf,SAEE,uBACEA,UAAU,QACVC,KAAQN,KAAKO,MAAMD,KACnBE,SAAW,WACXC,GAAMT,KAAKO,MAAME,GACjBC,KAAQV,KAAKO,MAAMG,KACnBC,YAAaX,KAAKO,MAAMI,YACxBC,MAAQZ,KAAKO,MAAMK,MACnBC,SAAY,SAACC,GAAD,OAAO,EAAKP,MAAMM,SAASC,EAAEC,OAAOH,QAChDI,WAAY,SAACF,GAAD,OAAO,EAAKP,MAAMS,WAAWF,Y,GAf1BG,IAAMC,WCqBhBC,E,uKAnBJ,IAAD,OACN,OACE,qBAAKd,UAAU,eAAf,SAEE,wBACEA,UAAU,SACVK,KAAO,SACPU,SAAUpB,KAAKO,MAAMa,SACrBC,QAAS,kBAAM,EAAKd,MAAMc,WAJ5B,SAMGrB,KAAKO,MAAMe,a,GAZKL,IAAMC,W,oKCIjC,IAAMK,EAAWC,cAAH,KAwBCC,E,kDAjBb,WAAYlB,GAAQ,IAAD,8BACjB,cAAMA,IACDmB,MAAQ,CACXzB,QAAS,EAAKM,MAAMN,QACpB0B,MAAO,EAAKpB,MAAMoB,OAJH,E,qDASjB,OACE,qBAAKtB,UAAU,gBAAf,SACE,cAAC,IAAD,CAAYmB,IAAKD,EAAUK,KAAM,IAAKD,MAAO3B,KAAKO,MAAMoB,MAAO1B,QAASD,KAAKO,MAAMN,gB,GAZrEgB,IAAMC,WC4HbW,E,kDAhIb,WAAYtB,GAAQ,IAAD,8BACjB,cAAMA,IACDmB,MAAQ,CACXvB,SAAU,GACV2B,SAAU,GACVC,gBAAgB,EAChBC,WAAW,GANI,E,0DAULC,EAAUC,GACtBA,EAAMA,EAAIC,OACVC,QAAQC,IAAIH,GACRA,EAAII,OAAS,IAGjBtC,KAAKuC,SAAL,eACGN,EAAWC,M,kCAKdlC,KAAKuC,SAAS,CAEZT,SAAU,GACVC,gBAAgB,M,qJAKb/B,KAAK0B,MAAMvB,S,oDAGXH,KAAK0B,MAAMI,S,wDAIhB9B,KAAKuC,SAAS,CACZR,gBAAgB,EAChBC,WAAW,I,kBAIKQ,MAAM,SAAU,CAC9BC,OAAQ,OACRC,QAAS,CACP,OAAU,mBACV,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnB1C,SAAUH,KAAK0B,MAAMvB,SACrB2B,SAAU9B,KAAK0B,MAAMI,a,cARrBgB,E,iBAYeA,EAAIC,O,SAAnBC,E,SACUA,EAAOC,SACnBC,EAAUhD,YAAa,EACvBgD,EAAU/C,SAAW6C,EAAO7C,UAGrB6C,IAA6B,IAAnBA,EAAOC,UACxBjD,KAAKmD,YACLC,MAAMJ,EAAOK,M,kDAIfjB,QAAQC,IAAR,MACArC,KAAKmD,Y,yBAGLnD,KAAKuC,SAAS,CACZP,WAAW,I,oKAKNlB,GACI,SAATA,EAAEwC,KACJtD,KAAKuD,Y,+BAOC,IAAD,OACP,OACE,sBAAKlD,UAAU,YAAf,UACE,cAAC,EAAD,CACEK,KAAK,QACLD,GAAG,QACHH,KAAK,QACLK,YAAY,gBACZC,MAAOZ,KAAK0B,MAAMvB,SAAWH,KAAK0B,MAAMvB,SAAW,GACnDU,SAAU,SAACqB,GAAD,OAAS,EAAKsB,cAAc,WAAYtB,IAClDlB,WAAY,SAACF,OAGf,cAAC,EAAD,CACEJ,KAAK,WACLD,GAAG,WACHH,KAAK,WACLK,YAAY,gBACZC,MAAOZ,KAAK0B,MAAMI,SAAW9B,KAAK0B,MAAMI,SAAW,GACnDjB,SAAU,SAACqB,GAAD,OAAS,EAAKsB,cAAc,WAAYtB,IAClDlB,WAAY,SAACF,GAAD,OAAO,EAAK2C,WAAW3C,MAGrC,uBAAOJ,KAAK,WAAWD,GAAG,WAAWiD,MAAM,WAAWC,SAAO,IAC7D,uBAAOC,IAAI,WAAX,yBAEA,cAAC,EAAD,CACEtC,KAAK,UACLF,SAAUpB,KAAK0B,MAAMK,eACrBV,QAAS,kBAAM,EAAKkC,aAGtB,mBAAGM,KAAK,IAAIH,MAAM,OAAlB,mCAEA,cAAC,EAAD,CACEzD,QAASD,KAAK0B,MAAMM,UAAWL,MAAM,mB,GA3HvBV,IAAMC,W,4DCCxB4C,G,MAAO,CACTC,EAAG,IACHC,QAAS,wBACTC,QAAS,KAIPC,EAAO,CACTH,EAAG,CACCrD,KAAM,aACNyD,KAAM,CACFC,MAAO,GACPC,OAAQ,cAoLLC,E,kDA9KX,WAAY/D,GAAQ,IAAD,8BACf,cAAMA,IACDmB,MAAQ,CACT6C,aAAc,CACVC,OAAQ,GACR9D,KAAM,GACN+D,QAAS,IAEbC,OAAQ,EACRC,YAAa,EACbC,SAAU,GAVC,E,2NAgBKpC,MAAM,YAAa,CAC/BC,OAAQ,OACRC,QAAS,CACL,OAAU,oBACV,eAAgB,uB,cAJpBI,E,gBAQeA,EAAIC,O,OAEvB,IAFIC,E,OACJZ,QAAQC,IAAI,kBACHwC,EAAI,EAAGA,EAAI7B,EAAOc,KAAKxB,OAAQuC,IACpC7E,KAAK0B,MAAM6C,aAAaC,OAAOM,KAAK9B,EAAOc,KAAKe,GAAGL,QACnDxE,KAAK0B,MAAM6C,aAAa7D,KAAKoE,KAAK9B,EAAOc,KAAKe,GAAGnE,MACjDV,KAAK0B,MAAM6C,aAAaE,QAAQK,KAAK9B,EAAOc,KAAKe,GAAGJ,SAEzB,GAAvBzB,EAAOc,KAAKe,GAAGnE,KACfV,KAAK0B,MAAMkD,UAAY5B,EAAOc,KAAKe,GAAGL,OAGtCxE,KAAK0B,MAAMkD,UAAY5B,EAAOc,KAAKe,GAAGL,OAE1CpC,QAAQC,IAAIrC,KAAK0B,MAAMkD,U,OAE3BxC,QAAQC,IAAI,gBACZD,QAAQC,IAAI,wB,UACKG,MAAM,sD,eAAnBuC,E,iBACgBA,EAAKhC,O,eAArBiC,E,OACJ5C,QAAQC,IAAI2C,GACZ5C,QAAQC,IAAI,sBACZrC,KAAK0B,MAAMgD,OAASO,OAAOC,WAAW,EAAIF,GAASG,QAAQ,GAC3DnF,KAAK0B,MAAMiD,YAAcM,OAAOC,WAAWlF,KAAK0B,MAAMkD,SAAW5E,KAAK0B,MAAMgD,QAAQS,QAAQ,GAC5FnF,KAAKoF,cACLhD,QAAQC,IAAI,yB,UACKG,MAAM,UAAW,CAC9BC,OAAQ,OACRC,QAAS,CACL,OAAU,oBACV,eAAgB,uB,eAJpB2C,E,iBAQgBA,EAAKtC,O,QAKzB,IALIuC,E,OAEAC,EAAc,CAAC,KACfC,EAAU,CAAC,OAENC,EAAI,EAAGA,EAAIH,EAAQxB,KAAKxB,OAAQmD,IACrCF,EAAYT,KAAKQ,EAAQxB,KAAK2B,GAAGC,MACjCF,EAAQV,KAAKQ,EAAQxB,KAAK2B,GAAGE,MAGjC7B,EAAKG,QAAQa,KAAKS,GAClBzB,EAAKG,QAAQa,KAAKU,GAElBpD,QAAQC,IAAI,uBAEZrC,KAAKoF,c,kDAGLhD,QAAQC,IAAI,OACZD,QAAQC,IAAR,M,+IAOJ,OACI,sBAAKhC,UAAU,YAAf,UACI,sBAAKA,UAAU,YAAf,UACI,qBAAKA,UAAU,cAAf,SACI,cAAC,IAAD,CACIuF,MAAM,YACNjD,KACI,cAAC,IAAD,CAASmB,KAAMA,EAAMI,KAAMA,QAIvC,qBAAK7D,UAAU,eAAf,SACI,cAAC,IAAD,CACIuF,MAAM,2BADV,SAGI,cAAC,IAAD,CAAOnF,GAAG,eACNoF,qBAAqB,EACrBC,YAAa,CAAC,CAAEC,QAAS,UAAY,CAAEA,QAAS,QAAU,CAAEA,QAAS,YACrEC,UACI,CACI,CACIC,KAAM,CACF,CAAEF,QAAS/F,KAAK0B,MAAM6C,aAAaC,OAAO,GAAK,QAC/C,CAAEuB,QAAS/F,KAAK0B,MAAM6C,aAAa7D,KAAK,GAAK,cAAC,IAAD,CAAciB,MAAM,UAAa,cAAC,IAAD,CAAeA,MAAM,SACnG,CAAEoE,QAAS/F,KAAK0B,MAAM6C,aAAaE,QAAQ,MAGnD,CACIwB,KAAM,CACF,CAAEF,QAAS/F,KAAK0B,MAAM6C,aAAaC,OAAO,GAAK,QAC/C,CAAEuB,QAAS/F,KAAK0B,MAAM6C,aAAa7D,KAAK,GAAK,cAAC,IAAD,CAAciB,MAAM,UAAa,cAAC,IAAD,CAAeA,MAAM,SACnG,CAAEoE,QAAS/F,KAAK0B,MAAM6C,aAAaE,QAAQ,MAGnD,CACIwB,KAAM,CACF,CAAEF,QAAS/F,KAAK0B,MAAM6C,aAAaC,OAAO,GAAK,QAC/C,CAAEuB,QAAS/F,KAAK0B,MAAM6C,aAAa7D,KAAK,GAAK,cAAC,IAAD,CAAciB,MAAM,UAAa,cAAC,IAAD,CAAeA,MAAM,SACnG,CAAEoE,QAAS/F,KAAK0B,MAAM6C,aAAaE,QAAQ,MAGnD,CACIwB,KAAM,CACF,CAAEF,QAAS/F,KAAK0B,MAAM6C,aAAaC,OAAO,GAAK,QAC/C,CAAEuB,QAAS/F,KAAK0B,MAAM6C,aAAa7D,KAAK,GAAK,cAAC,IAAD,CAAciB,MAAM,UAAa,cAAC,IAAD,CAAeA,MAAM,SACnG,CAAEoE,QAAS/F,KAAK0B,MAAM6C,aAAaE,QAAQ,MAGnD,CACIwB,KAAM,CACF,CAAEF,QAAS/F,KAAK0B,MAAM6C,aAAaC,OAAO,GAAK,QAC/C,CAAEuB,QAAS/F,KAAK0B,MAAM6C,aAAa7D,KAAK,GAAK,cAAC,IAAD,CAAciB,MAAM,UAAa,cAAC,IAAD,CAAeA,MAAM,SACnG,CAAEoE,QAAS/F,KAAK0B,MAAM6C,aAAaE,QAAQ,MAGnD,CACIwB,KAAM,CACF,CAAEF,QAAS/F,KAAK0B,MAAM6C,aAAaC,OAAO,GAAK,QAC/C,CAAEuB,QAAS/F,KAAK0B,MAAM6C,aAAa7D,KAAK,GAAK,cAAC,IAAD,CAAciB,MAAM,UAAa,cAAC,IAAD,CAAeA,MAAM,SACnG,CAAEoE,QAAS/F,KAAK0B,MAAM6C,aAAaE,QAAQ,gBAS3E,cAAC,IAAD,CACImB,MAAM,QACNjD,KACI,qBAAKtC,UAAU,WAAf,SACI,eAAC,IAAK6F,IAAN,CAAUC,OAAK,EAAf,UACI,cAAC,IAAKC,IAAN,UACI,cAAC,IAAD,CAAWC,OAAQ,EAAGC,SAAU,EAAGC,MAAOvG,KAAK0B,MAAMgD,OAAQ8B,MAAM,cAEvE,cAAC,IAAKJ,IAAN,UACI,cAAC,IAAD,CAAWC,OAAQ,EAAGC,SAAU,EAAGC,MAAOvG,KAAK0B,MAAMiD,YAAc,KAAM6B,MAAM,mBAEnF,cAAC,IAAKJ,IAAN,UACI,cAAC,IAAD,CAAWC,OAAQ,EAAGC,SAAU,EAAGC,MAAOvG,KAAK0B,MAAMkD,SAASO,QAAQ,GAAIqB,MAAM,wC,GApK7FvF,IAAMC,WCUduF,GC5BSxF,IAAMC,U,kDDA1B,WAAYX,GAAQ,IAAD,8BACf,cAAMA,IACDc,QAAU,EAAKd,MAAMc,QAC1B,EAAKqF,OAAS,YAHC,E,qDAOVC,GACL,OAAIA,GAAQC,OAAOC,SAASC,W,+BAKtB,IAAD,OACL,OACI,cAAC,IAAD,CACIC,MACI,eAAC,IAAMC,SAAP,WACI,cAAC,IAAIC,KAAL,CAAUP,OAAQ1G,KAAKkH,SAAS,aAAcC,GAAG,YAAYvG,MAAM,WAAWwG,KAAK,UACnF,cAAC,IAAIH,KAAL,CAAUP,OAAQ1G,KAAKkH,SAAS,WAAYC,GAAG,UAAUvG,MAAM,SAASwG,KAAK,gBAC7E,cAAC,IAAIH,KAAL,CAAUP,OAAQ1G,KAAKkH,SAAS,YAAaC,GAAG,WAAWvG,MAAM,UAAUwG,KAAK,SAChF,cAAC,IAAIH,KAAL,CAAUE,GAAG,IAAIvG,MAAM,SAASS,QAAS,kBAAM,EAAKA,WAAW+F,KAAK,qB,GAtBvEnG,IAAMC,YEaZmG,E,kDAdX,WAAY9G,GAAO,IAAD,8BACd,cAAMA,IACDc,QAAU,EAAKd,MAAMc,QAFZ,E,qDAKd,OACA,sBAAKqC,MAAM,QAAQjD,GAAG,QAAtB,UACI,qBAAK6G,IAAI,0BAA0BC,MAAM,KAAKC,OAAO,OACrD,qD,GATWvG,IAAMC,W,wBC8RduG,E,kDAzRX,WAAYlH,GAAQ,IAAD,8BACf,cAAMA,IAsIVmH,WAAa,SAACC,GACVA,EAAMC,iBACN,IAAIC,EAAS,EAAKnG,MAAMmG,OAExBzF,QAAQC,IAAIwF,EAAM,SAClBzF,QAAQC,IAAI,uCAAuCyF,KAAKD,EAAM,UAC9DzF,QAAQC,IAAIwF,EAAM,QAClBzF,QAAQC,IAAI,eAAeyF,KAAKD,EAAM,SAGjC,uCAAuCC,KAAKD,EAAM,SAMlD,eAAeC,KAAKD,EAAM,QAK/BE,SAASC,eAAe,WAAWC,MAAMC,QAAU,eAJ/C9E,MAAM,2CALNA,MAAM,8BAjJV,EAAK+E,WAAY,EACjB,EAAKC,aAAc,EACnB,EAAK1G,MAAQ,CACTmG,OAAQ,GACRlD,YAAa,EACbC,SAAU,EACVyD,SAAU,CACN5D,QAAS,GACTiB,KAAM,IAEV4C,UAAW,GAZA,E,6DAkBf,IAAIC,EAAMvI,KAAK0B,MAAM2G,SACjBG,EAAM,EACVpG,QAAQC,IAAIkG,EAAIjG,QAChB,IACI,OAAOmG,OAAOC,KAAKH,GAAKI,KAAI,WAMxB,OALAvG,QAAQC,IAAImG,GACZpG,QAAQC,IAAI,iBACZD,QAAQC,IAAIkG,EAAI9D,QAAQ+D,IACxBpG,QAAQC,IAAIkG,EAAI7C,KAAK8C,IACrBpG,QAAQC,IAAIkG,EAAI7C,KAAK8C,GAAKI,UAAU,EAAE,KAElC,eAAC,IAAM1C,IAAP,WACI,cAAC,IAAME,IAAP,UAAYmC,EAAI9D,QAAQ+D,KACxB,cAAC,IAAMpC,IAAP,UAAYmC,EAAI7C,KAAK8C,KAAOI,UAAU,EAAE,YAKxD,MAAO9H,GAEH,YADAsB,QAAQC,IAAIvB,M,sMAQI0B,MAAM,YAAa,CAC/BC,OAAQ,OACRC,QAAS,CACL,OAAU,oBACV,eAAgB,uB,cAJpBI,E,gBAQeA,EAAIC,O,OAEvB,IAFIC,E,OACJZ,QAAQC,IAAI,kBACHwC,EAAI,EAAGA,EAAI7B,EAAOc,KAAKxB,OAAQuC,IACT,GAAvB7B,EAAOc,KAAKe,GAAGnE,KACfV,KAAK0B,MAAMkD,UAAY5B,EAAOc,KAAKe,GAAGL,OAGtCxE,KAAK0B,MAAMkD,UAAY5B,EAAOc,KAAKe,GAAGL,O,OAG9CpC,QAAQC,IAAIrC,KAAK0B,MAAMkD,UACvBxC,QAAQC,IAAI,gBACZD,QAAQC,IAAI,wB,UACKG,MAAM,sD,eAAnBuC,E,iBACgBA,EAAKhC,O,eAArBiC,E,OACJ5C,QAAQC,IAAI2C,GACZ5C,QAAQC,IAAI,sBACZrC,KAAK0B,MAAMgD,OAASO,OAAOC,WAAW,EAAIF,GAASG,QAAQ,GAC3DnF,KAAK0B,MAAMiD,YAAcM,OAAOC,WAAWlF,KAAK0B,MAAMkD,SAAW5E,KAAK0B,MAAMgD,QAAQS,QAAQ,GAE5F/C,QAAQC,IAAIrC,KAAK0B,MAAMgD,QACvBtC,QAAQC,IAAIrC,KAAK0B,MAAMiD,a,UAENnC,MAAM,mBAAoB,CACvCC,OAAQ,OACRC,QAAS,CACL,OAAU,oBACV,eAAgB,uB,eAJpB2C,E,iBAQgBA,EAAKtC,O,QAKzB,IALIuC,E,OACJlD,QAAQC,IAAI,UACZD,QAAQC,IAAIiD,GACZlD,QAAQC,IAAIiD,EAAQxB,KAAKxB,QAEhBuG,EAAI,EAAGA,EAAIvD,EAAQxB,KAAKxB,OAAQuG,IACrC7I,KAAK0B,MAAM2G,SAAS5D,QAAQK,KAAKQ,EAAQxB,KAAK+E,GAAGpE,SACjDzE,KAAK0B,MAAM2G,SAAS3C,KAAKZ,KAAKQ,EAAQxB,KAAK+E,GAAGC,a,OAMlD1G,QAAQC,IAAI,0BACZD,QAAQC,IAAIrC,KAAK0B,MAAM2G,U,oBAIH7F,MAAM,WAAY,CAC9BC,OAAQ,OACRC,QAAS,CACL,OAAU,oBACV,eAAgB,uB,eAJpBI,E,iBAQeA,EAAIC,O,QAAnBC,E,OAEJZ,QAAQC,IAAI,WACRW,EAAOC,UACPjD,KAAKuC,SAAS,CAAE+F,UAAWtF,EAAOc,KAAK,GAAGiF,YAC1C3G,QAAQC,IAAIrC,KAAK0B,QAIrB1B,KAAKoF,c,mDAGLhD,QAAQC,IAAI,OACZD,QAAQC,IAAR,M,QAGJrC,KAAKoF,c,kDAGLhD,QAAQC,IAAI,OACZD,QAAQC,IAAR,M,2JA8BK2G,EAAOlI,GAChB,IAAI+G,EAAS7H,KAAK0B,MAAMmG,OACxBA,EAAOmB,GAASlI,EAAEC,OAAOH,MACzBZ,KAAKuC,SAAS,CAAEsF,a,wCAIhB7H,KAAKmI,WAAanI,KAAKmI,UACvB/F,QAAQC,IAAI,eAAiBrC,KAAKmI,WAClCnI,KAAKoF,gB,0CAKLpF,KAAKoI,aAAepI,KAAKoI,YACzBhG,QAAQC,IAAI,eAAiBrC,KAAKoI,aAClCpI,KAAKoF,gB,0BAILxE,EAAOqI,GACP,OAAOrI,EAAQqI,I,+BAGT,IAAD,OAEL,OADA7G,QAAQC,IAAI,iBAER,sBAAKhC,UAAU,YAAf,UACI,sBAAKA,UAAU,QAAf,UACI,eAAC,IAAD,CAAOwF,qBAAqB,EAA5B,UACI,eAAC,IAAMqD,OAAP,WACI,cAAC,IAAMC,UAAP,mBACA,cAAC,IAAMA,UAAP,4BACA,cAAC,IAAMA,UAAP,sBACA,cAAC,IAAMA,UAAP,oBACA,cAAC,IAAMA,UAAP,2BACA,cAAC,IAAMA,UAAP,yBAEJ,cAAC,IAAMC,KAAP,UACI,eAAC,IAAMlD,IAAP,WACI,cAAC,IAAME,IAAP,UACI,uCAEJ,cAAC,IAAMA,IAAP,gCACA,cAAC,IAAMA,IAAP,yDACA,eAAC,IAAMA,IAAP,WAAYpG,KAAK0B,MAAMkD,SAASO,QAAQ,GAAxC,UACA,eAAC,IAAMiB,IAAP,WAAYpG,KAAK0B,MAAMiD,YAAvB,QACA,eAAC,IAAMyB,IAAP,WACI,cAAC,IAAD,CAAQ/E,QAAS,kBAAM,EAAKgI,mBAAmB1H,MAAM,UAArD,qBACA,cAAC,IAAD,CAAQN,QAAS,kBAAM,EAAKiI,qBAAqB3H,MAAM,YAAvD,iCAKhB,oDACA,eAAC,IAAD,WACI,eAAC,IAAMuH,OAAP,WACI,cAAC,IAAMC,UAAP,sBACA,cAAC,IAAMA,UAAP,+BAEJ,cAAC,IAAMC,KAAP,UACKpJ,KAAKuJ,yBAIlB,qBAAKC,UAAU,SAAf,SACI,eAACC,EAAA,EAAD,CAAOC,KAAM1J,KAAKmI,UAAWwB,kBAAgB,gCAA7C,UACI,cAACF,EAAA,EAAMP,OAAP,UACI,cAACO,EAAA,EAAMG,MAAP,CAAanJ,GAAG,gCAAhB,iCAIJ,eAACgJ,EAAA,EAAML,KAAP,WACI,6FACA,4BAAG,6EACH,kCACA,+IACA,4EAEJ,cAACK,EAAA,EAAMI,OAAP,UACI,cAAC,IAAD,CAAQxI,QAAS,kBAAM,EAAKgI,mBAA5B,0BAIZ,qBAAKG,UAAU,UAAf,SACI,eAACC,EAAA,EAAD,CAAOC,KAAM1J,KAAKoI,YAAauB,kBAAgB,gCAA/C,UACI,cAACF,EAAA,EAAMP,OAAP,UACI,cAACO,EAAA,EAAMG,MAAP,CAAanJ,GAAG,gCAAhB,oCAIJ,cAACgJ,EAAA,EAAML,KAAP,UACI,qBAAKI,UAAU,iBAAf,SACI,eAAC,IAAD,CAAMM,SAAU9J,KAAK0H,WAAWqC,KAAK/J,MAArC,UACI,eAAC,IAAKgK,SAAN,WACI,cAAC,IAAKC,MAAN,CAAYxJ,GAAG,UAAUH,KAAK,UAAUkG,MAAM,UAAU7F,YAAY,oBAAoBuJ,UAAU,KAAK9C,KAAK,cAAc1G,KAAK,OAC3HG,SAAUb,KAAKmK,aAAaJ,KAAK/J,KAAM,aAC3C,cAAC,IAAKiK,MAAN,CAAYxJ,GAAG,SAASH,KAAK,SAASkG,MAAM,SAAS7F,YAAY,0BAA0ByG,KAAK,cAC5FvG,SAAUb,KAAKmK,aAAaJ,KAAK/J,KAAM,UAAWQ,UAAQ,IAC9D,cAAC,IAAD,CAAQF,KAAK,SAASI,KAAK,SAASiB,MAAM,UAA1C,yBAEJ,sBAAKlB,GAAG,UAAR,UACI,0HACA,yGAA4ET,KAAK0B,MAAM4G,UAAvF,YACA,4BAAG,yFAKnB,cAACmB,EAAA,EAAMI,OAAP,UACI,cAAC,IAAD,CAAQxI,QAAS,kBAAM,EAAKiI,qBAA5B,iC,GA/QPrI,IAAMC,WCiFZkJ,E,kDApFX,WAAY7J,GAAQ,IAAD,8BACf,cAAMA,IACDmB,MAAQ,CACT2I,UAAW,GACXC,SAAU,GACVC,KAAM,GACNC,MAAO,GACPC,aAAc,GACdC,SAAU,GACVpC,UAAW,IATA,E,2MAeK9F,MAAM,WAAY,CAC9BC,OAAQ,OACRC,QAAS,CACL,OAAU,oBACV,eAAgB,uB,cAJpBI,E,gBAQeA,EAAIC,O,OAAnBC,E,OAEJZ,QAAQC,IAAI,WACRW,EAAOC,UAEPjD,KAAKuC,SAAS,CAAE8H,UAAWrH,EAAOc,KAAK,GAAGuG,YAC1CrK,KAAKuC,SAAS,CAAE+H,SAAUtH,EAAOc,KAAK,GAAGwG,WACzCtK,KAAKuC,SAAS,CAAEgI,KAAMvH,EAAOc,KAAK,GAAGyG,OACrCvK,KAAKuC,SAAS,CAAEiI,MAAOxH,EAAOc,KAAK,GAAG0G,QACtCxK,KAAKuC,SAAS,CAAEkI,aAAczH,EAAOc,KAAK,GAAG2G,eAC7CzK,KAAKuC,SAAS,CAAEmI,SAAU1H,EAAOc,KAAK,GAAG4G,WACzC1K,KAAKuC,SAAS,CAAE+F,UAAWtF,EAAOc,KAAK,GAAGiF,YAE1C3G,QAAQC,IAAIrC,KAAK0B,QAIrB1B,KAAKoF,c,kDAGLhD,QAAQC,IAAI,OACZD,QAAQC,IAAR,M,+IAMJ,OACI,sBAAKhC,UAAU,YAAf,UACI,eAAC,IAAD,WACI,cAAC,IAAKsK,OAAN,CAAahJ,MAAM,OAAOiJ,MAAI,IAC9B,cAAC,IAAK1B,OAAN,UACI,cAAC,IAAKU,MAAN,wBAEJ,cAAC,IAAKR,KAAN,UACI,eAAC,IAAD,WACI,cAAC,IAAKa,MAAN,CAAY3J,KAAK,YAAYkG,MAAM,aAAa5F,MAAOZ,KAAK0B,MAAM2I,UAAWjJ,UAAQ,EAACyJ,UAAQ,IAC9F,cAAC,IAAKZ,MAAN,CAAY3J,KAAK,WAAWkG,MAAM,YAAY5F,MAAOZ,KAAK0B,MAAM4I,SAAUlJ,UAAQ,EAACyJ,UAAQ,IAC3F,cAAC,IAAKZ,MAAN,CAAY3J,KAAK,QAAQkG,MAAM,SAASY,KAAK,OAAOxG,MAAOZ,KAAK0B,MAAM6I,KAAMnJ,UAAQ,IACpF,cAAC,IAAK6I,MAAN,CAAY3J,KAAK,QAAQkG,MAAM,eAAe/F,GAAG,eAAe2G,KAAK,QAAQxG,MAAOZ,KAAK0B,MAAM8I,MAAOpJ,UAAQ,IAC9G,cAAC,IAAK6I,MAAN,CAAY3J,KAAK,eAAekG,MAAM,mBAAmBY,KAAK,SAAShG,UAAQ,EAACR,MAAOZ,KAAK0B,MAAM+I,aAAa7B,UAAU,EAAE,MAC3H,cAAC,IAAKqB,MAAN,CAAY3J,KAAK,WAAWkG,MAAM,WAAWpF,UAAQ,EAACR,MAAOZ,KAAK0B,MAAMgJ,SAAS9B,UAAU,EAAE,cAIzG,eAAC,IAAD,WACI,cAAC,IAAK+B,OAAN,CAAahJ,MAAM,SAASiJ,MAAI,IAChC,cAAC,IAAK1B,OAAN,UACI,cAAC,IAAKU,MAAN,gCAEJ,cAAC,IAAKR,KAAN,UACI,cAAC,IAAD,UACI,cAAC,IAAKa,MAAN,CAAY3J,KAAK,sBAAsBkG,MAAM,uBAAuB5F,MAAOZ,KAAK0B,MAAM4G,UAAWlB,KAAK,OAAOhG,UAAQ,EAACyJ,UAAQ,kB,GA5EjI5J,IAAMC,WCazB4J,E,6TAGgBtI,MAAM,cAAe,CACnCC,OAAQ,OACRC,QAAS,CACP,OAAU,oBACV,eAAgB,uB,cAJhBI,E,gBAQeA,EAAIC,O,QAAnBC,E,SAEUA,EAAOC,SACnBC,EAAUjD,SAAU,EACpBiD,EAAUhD,YAAa,EACvBgD,EAAU/C,SAAW6C,EAAO7C,WAG5B+C,EAAUjD,SAAU,EACpBiD,EAAUhD,YAAa,G,kDAIzBgD,EAAUjD,SAAU,EACpBiD,EAAUhD,YAAa,E,4RAQPsC,MAAM,UAAW,CAC/BC,OAAQ,OACRC,QAAS,CACP,OAAU,oBACV,eAAgB,uB,cAJhBI,E,gBAQeA,EAAIC,O,QAAnBC,E,SAEUA,EAAOC,UACnBC,EAAUhD,YAAa,EACvBgD,EAAU/C,SAAW,I,kDAIvBiC,QAAQC,IAAR,M,+IAKM,IAAD,OAEP,OAAIa,EAAUjD,QACL,KAeHiD,EAAUhD,WAEV,qBAAKG,UAAU,MAAf,SACE,sBAAKA,UAAU,UAAUI,GAAG,oBAA5B,UACE,qBAAKJ,UAAU,WAAf,SACE,cAAC,EAAD,MAEF,eAAC,IAAD,WACE,qBAAKA,UAAU,SAAf,SACE,cAAC,EAAD,CACEgB,QAAS,kBAAM,EAAK0J,gBAGxB,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAW5G,EAAjC,SAA2C,cAAC,IAAD,CAAU6C,GAAG,gBACxD,cAAC,IAAD,CAAO6D,KAAK,YAAYC,OAAK,EAACC,UAAW5G,IACzC,cAAC,IAAD,CAAO0G,KAAK,UAAUC,OAAK,EAACC,UAAWzD,IACvC,cAAC,IAAD,CAAOuD,KAAK,WAAWC,OAAK,EAACC,UAAWd,OAE1C,qBAAK/J,UAAU,SAAf,SACE,cAAC,IAAD,CAAOK,KAAK,SAAS0G,KAAK,iBAA1B,6FAUR,qBAAK/G,UAAU,MAAf,SACE,qBAAKA,UAAU,QAAf,SACE,sBAAKA,UAAU,YAAY8K,IAAK,SAAAA,GAAG,OAAK,EAAKC,UAAYD,GAAzD,UACE,0BAASzH,MAAM,OAAf,UACE,8CACA,sCACA,qBAAKA,MAAM,OAAX,SACE,sBAAMA,MAAM,oBAAZ,SAAgC,mBAAGG,KAAK,UAAR,yBAElC,qBAAKH,MAAM,UAAX,SACE,qBAAKA,MAAM,mBAAX,SACE,cAAC,EAAD,WAIN,qBAAKA,MAAM,uB,GApHPzC,IAAMC,WA6HTmK,cAASP,GCjITQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFlE,SAASC,eAAe,SAM1BsD,M","file":"static/js/main.8aeb46f4.chunk.js","sourcesContent":["import { extendObservable } from 'mobx';\r\n\r\n/**\r\n * UserStore\r\n */\r\n\r\n class UserStore {\r\n     constructor() {\r\n         extendObservable(this, {\r\n            loading: true,\r\n            isLoggedIn: false,\r\n            username: ''\r\n         })\r\n     }\r\n }\r\n\r\n export default new UserStore();","import React from 'react';\r\n\r\nclass InputField extends React.Component{\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"inputField\">\r\n        \r\n        <input\r\n          className='input'\r\n          name = {this.props.name}\r\n          required = 'required'\r\n          id = {this.props.id}\r\n          type = {this.props.type}\r\n          placeholder={this.props.placeholder}\r\n          value ={this.props.value}\r\n          onChange = {(e) => this.props.onChange(e.target.value)}\r\n          onKeyPress={(e) => this.props.onKeyPress(e)}\r\n        />\r\n\r\n      </div>\r\n    );  \r\n  }\r\n}\r\n\r\nexport default InputField;\r\n","import React from 'react';\r\n\r\nclass SubmitButton extends React.Component{\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"submitButton\">\r\n        \r\n        <button\r\n          className='submit'\r\n          type = 'submit'\r\n          disabled={this.props.disabled}\r\n          onClick={() => this.props.onClick()}\r\n        >  \r\n          {this.props.text}\r\n        </button>\r\n\r\n\r\n      </div>\r\n    );  \r\n  }\r\n}\r\n\r\nexport default SubmitButton;\r\n","import React from \"react\";\r\nimport { css } from \"@emotion/core\";\r\nimport HashLoader from \"react-spinners/HashLoader\";\r\n\r\n\r\n// Can be a string as well. Need to ensure each key-value pair ends with ;\r\nconst override = css`\r\n  display: block;\r\n  margin: 0 auto;\r\n  border-color: red;\r\n`;\r\n\r\nclass Spinner extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: this.props.loading,\r\n      color: this.props.color\r\n    };\r\n  }\r\n  //\"#022ea8\"\r\n  render() {\r\n    return (\r\n      <div className=\"sweet-loading\">\r\n        <HashLoader css={override} size={100} color={this.props.color} loading={this.props.loading} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Spinner;","import React from 'react';\r\nimport InputField from './InputField';\r\nimport SubmitButton from './SubmitButton';\r\nimport UserStore from './stores/UserStore';\r\nimport Spinner from './spinner';\r\n\r\nclass LoginForm extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: '',\r\n      password: '',\r\n      buttonDisabled: false,\r\n      loggingIn: false\r\n    }\r\n  }\r\n\r\n  setInputValue(property, val) {\r\n    val = val.trim();\r\n    console.log(val)\r\n    if (val.length > 50) {\r\n      return;\r\n    }\r\n    this.setState({\r\n      [property]: val\r\n    })\r\n  }\r\n\r\n  resetForm() {\r\n    this.setState({\r\n      //username: '',\r\n      password: '',\r\n      buttonDisabled: false,\r\n    })\r\n  }\r\n\r\n  async doLogin() {\r\n    if (!this.state.username) {\r\n      return;\r\n    }\r\n    if (!this.state.password) {\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      buttonDisabled: true,\r\n      loggingIn: true\r\n    })\r\n\r\n    try {\r\n      let res = await fetch('/login', {\r\n        method: 'post',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          username: this.state.username,\r\n          password: this.state.password\r\n        })\r\n      });\r\n\r\n      let result = await res.json();\r\n      if (result && result.success) {\r\n        UserStore.isLoggedIn = true;\r\n        UserStore.username = result.username;\r\n      }\r\n\r\n      else if (result && result.success === false) {\r\n        this.resetForm();\r\n        alert(result.msg)\r\n      }\r\n    }\r\n    catch (e) {\r\n      console.log(e);\r\n      this.resetForm();\r\n    }\r\n    finally {\r\n      this.setState({\r\n        loggingIn: false\r\n      })\r\n    }\r\n  }\r\n\r\n  checkEnter(e) {\r\n    if (e.key == 'Enter') {\r\n      this.doLogin()\r\n    }\r\n    else {\r\n    }\r\n    return;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"loginForm\">\r\n        <InputField\r\n          type='email'\r\n          id='email'\r\n          name='email'\r\n          placeholder='Your Username'\r\n          value={this.state.username ? this.state.username : ''}\r\n          onChange={(val) => this.setInputValue('username', val)}\r\n          onKeyPress={(e) => { return }}\r\n        />\r\n\r\n        <InputField\r\n          type='password'\r\n          id='password'\r\n          name='password'\r\n          placeholder='Your Password'\r\n          value={this.state.password ? this.state.password : ''}\r\n          onChange={(val) => this.setInputValue('password', val)}\r\n          onKeyPress={(e) => this.checkEnter(e)}\r\n        />\r\n\r\n        <input type=\"checkbox\" id=\"remember\" class=\"checkbox\" checked />\r\n        <label for=\"remember\">Remember me</label>\r\n\r\n        <SubmitButton\r\n          text='Sign In'\r\n          disabled={this.state.buttonDisabled}\r\n          onClick={() => this.doLogin()}\r\n        />\r\n\r\n        <a href=\"#\" class=\"more\">Forgot your password?</a>\r\n\r\n        <Spinner\r\n          loading={this.state.loggingIn} color=\"#022ea8\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginForm;\r\n","import React, { Component } from \"react\";\r\nimport { Table, Card, Grid, StatsCard, Icon } from 'tabler-react';\r\nimport { ChevronsRight, ChevronsLeft } from 'react-feather';\r\nimport C3Chart from \"react-c3js\";\r\nimport 'c3/c3.css';\r\nimport './Dashboard.scss';\r\n\r\nconst data = {\r\n    x: 'x',\r\n    xFormat: '%Y-%m-%dT%H:%M:%S.%LZ',\r\n    columns: [\r\n    ],\r\n};\r\n\r\nconst axis = {\r\n    x: {\r\n        type: 'timeseries',\r\n        tick: {\r\n            count: 10,\r\n            format: '%Y-%m-%d'\r\n        }\r\n    }\r\n};\r\n\r\nclass Overview extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            transactions: {\r\n                amount: [],\r\n                type: [],\r\n                address: []\r\n            },\r\n            usdbtc: 0,\r\n            walletvalue: 0,\r\n            totalbtc: 0.0\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            let res = await fetch('/overview', {\r\n                method: 'post',\r\n                headers: {\r\n                    'Accept': 'applcication/json',\r\n                    'Content-Type': 'applcication/json'\r\n                }\r\n            });\r\n\r\n            let result = await res.json();\r\n            console.log('start btc calc')\r\n            for (var i = 0; i < result.data.length; i++) {\r\n                this.state.transactions.amount.push(result.data[i].amount)\r\n                this.state.transactions.type.push(result.data[i].type)\r\n                this.state.transactions.address.push(result.data[i].address)\r\n\r\n                if (result.data[i].type == 1) {\r\n                    this.state.totalbtc += result.data[i].amount\r\n                }\r\n                else {\r\n                    this.state.totalbtc -= result.data[i].amount\r\n                }\r\n                console.log(this.state.totalbtc)\r\n            }\r\n            console.log('end btc calc')\r\n            console.log('start get conversion')\r\n            let res2 = await fetch('https://blockchain.info/tobtc?currency=USD&value=1')\r\n            let result2 = await res2.json()\r\n            console.log(result2)\r\n            console.log('end get conversion')\r\n            this.state.usdbtc = Number.parseFloat(1 / result2).toFixed(2);\r\n            this.state.walletvalue = Number.parseFloat(this.state.totalbtc * this.state.usdbtc).toFixed(2)\r\n            this.forceUpdate();\r\n            console.log('start get chartvalues')\r\n            let res3 = await fetch('/usdbtc', {\r\n                method: 'post',\r\n                headers: {\r\n                    'Accept': 'applcication/json',\r\n                    'Content-Type': 'applcication/json'\r\n                }\r\n            });\r\n\r\n            let result3 = await res3.json();\r\n\r\n            var datetimeArr = ['x']\r\n            var rateArr = ['USD']\r\n\r\n            for (var j = 0; j < result3.data.length; j++) {\r\n                datetimeArr.push(result3.data[j].date)\r\n                rateArr.push(result3.data[j].rate)\r\n            }\r\n\r\n            data.columns.push(datetimeArr)\r\n            data.columns.push(rateArr)\r\n\r\n            console.log('end get chartvalues')\r\n\r\n            this.forceUpdate();\r\n        }\r\n        catch (e) {\r\n            console.log('exc')\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"dashboard\">\r\n                <div className=\"mainChart\">\r\n                    <div className=\"walletValue\">\r\n                        <Card\r\n                            title=\"BTC Value\"\r\n                            body={\r\n                                <C3Chart data={data} axis={axis} />\r\n                            }\r\n                        />\r\n                    </div>\r\n                    <div className=\"transactions\">\r\n                        <Card\r\n                            title=\"Most Recent Transactions\"\r\n                        >\r\n                            <Table id=\"dynamictable\"\r\n                                highlightRowOnHover={true}\r\n                                headerItems={[{ content: \"Amount\" }, { content: \"Type\" }, { content: \"Address\" }]}\r\n                                bodyItems={\r\n                                    [\r\n                                        {\r\n                                            item: [\r\n                                                { content: this.state.transactions.amount[0] + \" BTC\" },\r\n                                                { content: this.state.transactions.type[0] ? <ChevronsLeft color=\"green\" /> : <ChevronsRight color=\"red\" /> },\r\n                                                { content: this.state.transactions.address[0] },\r\n                                            ],\r\n                                        },\r\n                                        {\r\n                                            item: [\r\n                                                { content: this.state.transactions.amount[1] + \" BTC\" },\r\n                                                { content: this.state.transactions.type[1] ? <ChevronsLeft color=\"green\" /> : <ChevronsRight color=\"red\" /> },\r\n                                                { content: this.state.transactions.address[1] },\r\n                                            ],\r\n                                        },\r\n                                        {\r\n                                            item: [\r\n                                                { content: this.state.transactions.amount[2] + \" BTC\" },\r\n                                                { content: this.state.transactions.type[2] ? <ChevronsLeft color=\"green\" /> : <ChevronsRight color=\"red\" /> },\r\n                                                { content: this.state.transactions.address[2] },\r\n                                            ],\r\n                                        },\r\n                                        {\r\n                                            item: [\r\n                                                { content: this.state.transactions.amount[3] + \" BTC\" },\r\n                                                { content: this.state.transactions.type[3] ? <ChevronsLeft color=\"green\" /> : <ChevronsRight color=\"red\" /> },\r\n                                                { content: this.state.transactions.address[3] },\r\n                                            ],\r\n                                        },\r\n                                        {\r\n                                            item: [\r\n                                                { content: this.state.transactions.amount[4] + \" BTC\" },\r\n                                                { content: this.state.transactions.type[4] ? <ChevronsLeft color=\"green\" /> : <ChevronsRight color=\"red\" /> },\r\n                                                { content: this.state.transactions.address[4] },\r\n                                            ],\r\n                                        },\r\n                                        {\r\n                                            item: [\r\n                                                { content: this.state.transactions.amount[5] + \" BTC\" },\r\n                                                { content: this.state.transactions.type[5] ? <ChevronsLeft color=\"green\" /> : <ChevronsRight color=\"red\" /> },\r\n                                                { content: this.state.transactions.address[5] },\r\n                                            ],\r\n                                        },\r\n                                    ]\r\n                                }\r\n                            />\r\n                        </Card>\r\n                    </div>\r\n                </div>\r\n                <Card\r\n                    title=\"Stats\"\r\n                    body={\r\n                        <div className=\"substats\">\r\n                            <Grid.Row cards>\r\n                                <Grid.Col>\r\n                                    <StatsCard layout={1} movement={0} total={this.state.usdbtc} label=\"USD/BTC\" />\r\n                                </Grid.Col>\r\n                                <Grid.Col>\r\n                                    <StatsCard layout={1} movement={0} total={this.state.walletvalue + \" $\"} label=\"Wallet Value\" />\r\n                                </Grid.Col>\r\n                                <Grid.Col>\r\n                                    <StatsCard layout={1} movement={0} total={this.state.totalbtc.toFixed(8)} label=\"Total BTC in Wallet\" />\r\n                                </Grid.Col>\r\n                            </Grid.Row>\r\n                        </div>\r\n                    }\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Overview;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Nav } from \"tabler-react\";\r\nimport { NavLink, withRouter } from \"react-router-dom\";\r\n\r\nclass Navbar extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.onClick = this.props.onClick;\r\n        this.active = '/overview';\r\n    }\r\n\r\n\r\n    isActive(elem) {\r\n        if (elem == window.location.pathname)\r\n            return true;\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Nav\r\n                items={\r\n                    <React.Fragment>\r\n                        <Nav.Item active={this.isActive('/overview')} to=\"/overview\" value=\"Overview\" icon=\"globe\" />\r\n                        <Nav.Item active={this.isActive('/wallet')} to=\"/wallet\" value=\"Wallet\" icon=\"credit-card\" />\r\n                        <Nav.Item active={this.isActive('/profile')} to=\"/profile\" value=\"Profile\" icon=\"user\" />\r\n                        <Nav.Item to=\"/\" value=\"Logout\" onClick={() => this.onClick()} icon=\"log-out\" />\r\n                    </React.Fragment>\r\n                }\r\n            />);\r\n    }\r\n}\r\n\r\nexport default Navbar;","import React, { Component } from \"react\";\r\nimport \"tabler-react/dist/Tabler.css\";\r\nimport './Dashboard.scss';\r\nimport Overview from './Overview';\r\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\r\n\r\nclass Dashboard extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.location = window.location.pathname\r\n        this.onClick = this.props.onClick;\r\n    }\r\n    \r\n\r\n  render() {\r\n    return (\r\n      <div className=\"dashboard-main\">\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;\r\n","import React from 'react';\r\n\r\n\r\nclass TitleBar extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.onClick = this.props.onClick;\r\n    }\r\n    render() {\r\n        return (\r\n        <div class=\"title\" id=\"title\">\r\n            <img src='./cryptowallet_d_gr.png' width=\"40\" height=\"40\"/>\r\n            <h1>CryptoWallet</h1>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TitleBar;","import React from \"react\";\r\nimport Dashboard from './Dashboard';\r\nimport './Dashboard.scss';\r\nimport { Table, Button, Form } from 'tabler-react';\r\nimport { Modal } from 'react-bootstrap';\r\n\r\n\r\nclass Wallet extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.modalShow = false;\r\n        this.modalShowWD = false;\r\n        this.state = {\r\n            fields: {},\r\n            walletvalue: 0,\r\n            totalbtc: 0,\r\n            approved: {\r\n                address: [],\r\n                date: []\r\n            },\r\n            walletSec: 0\r\n        }\r\n\r\n    }\r\n\r\n    renderApproved() {\r\n        let obj = this.state.approved;\r\n        let cnt = 0\r\n        console.log(obj.length)\r\n        try {\r\n            return Object.keys(obj).map(function () {\r\n                console.log(cnt)\r\n                console.log('approvingwall')\r\n                console.log(obj.address[cnt])\r\n                console.log(obj.date[cnt])\r\n                console.log(obj.date[cnt].substring(0,10))\r\n                return (\r\n                    <Table.Row>\r\n                        <Table.Col>{obj.address[cnt]}</Table.Col>\r\n                        <Table.Col>{obj.date[cnt++].substring(0,10)}</Table.Col>\r\n                    </Table.Row>\r\n                )\r\n            })\r\n        }\r\n        catch (e) {\r\n            console.log(e)\r\n            return;\r\n        }\r\n    }\r\n\r\n\r\n    async componentWillMount() {\r\n        try {\r\n            let res = await fetch('/overview', {\r\n                method: 'post',\r\n                headers: {\r\n                    'Accept': 'applcication/json',\r\n                    'Content-Type': 'applcication/json'\r\n                }\r\n            });\r\n\r\n            let result = await res.json();\r\n            console.log('start btc calc')\r\n            for (var i = 0; i < result.data.length; i++) {\r\n                if (result.data[i].type == 1) {\r\n                    this.state.totalbtc += result.data[i].amount\r\n                }\r\n                else {\r\n                    this.state.totalbtc -= result.data[i].amount\r\n                }\r\n            }\r\n            console.log(this.state.totalbtc)\r\n            console.log('end btc calc')\r\n            console.log('start get conversion')\r\n            let res2 = await fetch('https://blockchain.info/tobtc?currency=USD&value=1')\r\n            let result2 = await res2.json()\r\n            console.log(result2)\r\n            console.log('end get conversion')\r\n            this.state.usdbtc = Number.parseFloat(1 / result2).toFixed(2);\r\n            this.state.walletvalue = Number.parseFloat(this.state.totalbtc * this.state.usdbtc).toFixed(2)\r\n\r\n            console.log(this.state.usdbtc)\r\n            console.log(this.state.walletvalue)\r\n\r\n            let res3 = await fetch('/approvedWallets', {\r\n                method: 'post',\r\n                headers: {\r\n                    'Accept': 'applcication/json',\r\n                    'Content-Type': 'applcication/json'\r\n                }\r\n            });\r\n\r\n            let result3 = await res3.json();\r\n            console.log(\"result\")\r\n            console.log(result3)\r\n            console.log(result3.data.length)\r\n\r\n            for (var k = 0; k < result3.data.length; k++) {\r\n                this.state.approved.address.push(result3.data[k].address)\r\n                this.state.approved.date.push(result3.data[k].approveDate)\r\n\r\n                //this.state.approved.address.push(result3.data[k].address)\r\n                //this.state.approved.date.push(result3.data[k].approveDate);\r\n            }\r\n\r\n            console.log(\"filled approved state:\")\r\n            console.log(this.state.approved)\r\n            \r\n\r\n            try {\r\n                let res = await fetch('/profile', {\r\n                    method: 'post',\r\n                    headers: {\r\n                        'Accept': 'applcication/json',\r\n                        'Content-Type': 'applcication/json'\r\n                    }\r\n                });\r\n    \r\n                let result = await res.json();\r\n    \r\n                console.log('profile')\r\n                if (result.success) {\r\n                    this.setState({ walletSec: result.data[0].walletsec })\r\n                    console.log(this.state)\r\n    \r\n                }\r\n    \r\n                this.forceUpdate();\r\n            }\r\n            catch (e) {\r\n                console.log('exc')\r\n                console.log(e)\r\n            }\r\n\r\n            this.forceUpdate();\r\n        }\r\n        catch (e) {\r\n            console.log('exc')\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    onWDsubmit = (event) => {\r\n        event.preventDefault();\r\n        let fields = this.state.fields;\r\n\r\n        console.log(fields['address'])\r\n        console.log(/^(bc1|[13])[a-zA-HJ-NP-Z0-9]{25,39}$/.test(fields['address']))\r\n        console.log(fields['amount'])\r\n        console.log(/^\\d+(.\\d+)*$/.test(fields['amount']))\r\n\r\n        // Address\r\n        if (!/^(bc1|[13])[a-zA-HJ-NP-Z0-9]{25,39}$/.test(fields['address'])) {\r\n            // Reset Address\r\n            alert('Enter a valid BTC Address')\r\n            return;\r\n        }\r\n\r\n        if (!/^\\d+(.\\d+)*$/.test(fields['amount'])) {\r\n            alert('Enter a valid numeric amount to pay out')\r\n            return;\r\n        }\r\n\r\n        document.getElementById(\"divHint\").style.display = \"inline-block\";\r\n        return;\r\n    }\r\n\r\n    handleChange(field, e) {\r\n        let fields = this.state.fields;\r\n        fields[field] = e.target.value;\r\n        this.setState({ fields });\r\n    }\r\n\r\n    switchModalShow() {\r\n        this.modalShow = !this.modalShow;\r\n        console.log(\"modalshow = \" + this.modalShow)\r\n        this.forceUpdate();\r\n        return;\r\n    }\r\n\r\n    switchModalWDShow() {\r\n        this.modalShowWD = !this.modalShowWD;\r\n        console.log(\"modalshow = \" + this.modalShowWD)\r\n        this.forceUpdate();\r\n        return;\r\n    }\r\n\r\n    USD(value, USDexchange) {\r\n        return value * USDexchange;\r\n    }\r\n\r\n    render() {\r\n        console.log('render called')\r\n        return (\r\n            <div className=\"dashboard\">\r\n                <div className=\"table\">\r\n                    <Table highlightRowOnHover={true}>\r\n                        <Table.Header>\r\n                            <Table.ColHeader>Type</Table.ColHeader>\r\n                            <Table.ColHeader>Friendly Name</Table.ColHeader>\r\n                            <Table.ColHeader>Address</Table.ColHeader>\r\n                            <Table.ColHeader>Value</Table.ColHeader>\r\n                            <Table.ColHeader>Value in USD</Table.ColHeader>\r\n                            <Table.ColHeader>Actions</Table.ColHeader>\r\n                        </Table.Header>\r\n                        <Table.Body>\r\n                            <Table.Row>\r\n                                <Table.Col>\r\n                                    <h4>BTC</h4>\r\n                                </Table.Col>\r\n                                <Table.Col>Long-Time-Storage</Table.Col>\r\n                                <Table.Col>bc1qm6qv2jdgjmt4krahrw9wpcyt5mmt7g8h5hz0av</Table.Col>\r\n                                <Table.Col>{this.state.totalbtc.toFixed(8)} BTC</Table.Col>\r\n                                <Table.Col>{this.state.walletvalue} $</Table.Col>\r\n                                <Table.Col>\r\n                                    <Button onClick={() => this.switchModalShow()} color=\"primary\">Deposit</Button>\r\n                                    <Button onClick={() => this.switchModalWDShow()} color=\"secondary\">Withdraw</Button>\r\n                                </Table.Col>\r\n                            </Table.Row>\r\n                        </Table.Body>\r\n                    </Table>\r\n                    <h4>Approved Addresses</h4>\r\n                    <Table>\r\n                        <Table.Header>\r\n                            <Table.ColHeader>Address</Table.ColHeader>\r\n                            <Table.ColHeader>Approval Date</Table.ColHeader>\r\n                        </Table.Header>\r\n                        <Table.Body>\r\n                            {this.renderApproved()}\r\n                        </Table.Body>\r\n                    </Table>\r\n                </div>\r\n                <div classname=\"modalD\" >\r\n                    <Modal show={this.modalShow} aria-labelledby=\"contained-modal-title-vcenter\">\r\n                        <Modal.Header>\r\n                            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                                Deposit to Wallet\r\n                            </Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <p>To deposit to this wallet, please use the following address:</p>\r\n                            <p><b>bc1qm6qv2jdgjmt4krahrw9wpcyt5mmt7g8h5hz0av</b></p>\r\n                            <p> </p>\r\n                            <p>Note: For safety reasons it is required to deposit a set amount of BTC to enable withdrawing to a new address.</p>\r\n                            <p>This process only needs to be done once.</p>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button onClick={() => this.switchModalShow()}>Close</Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n                </div>\r\n                <div classname=\"modalWD\" >\r\n                    <Modal show={this.modalShowWD} aria-labelledby=\"contained-modal-title-vcenter\">\r\n                        <Modal.Header>\r\n                            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                                Withdraw from Wallet\r\n                            </Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <div classname=\"withdrawalForm\">\r\n                                <Form onSubmit={this.onWDsubmit.bind(this)}>\r\n                                    <Form.FieldSet>\r\n                                        <Form.Input id=\"address\" name=\"address\" label=\"Address\" placeholder=\"Receiving Address\" maxLength=\"35\" icon=\"credit-card\" type=\"text\"\r\n                                            onChange={this.handleChange.bind(this, \"address\")} />\r\n                                        <Form.Input id=\"amount\" name=\"amount\" label=\"Amount\" placeholder=\"(BTC) Withdrawal Amount\" icon=\"dollar-sign\"\r\n                                            onChange={this.handleChange.bind(this, \"amount\")} required />\r\n                                        <Button name=\"submit\" type=\"submit\" color=\"primary\">Withdraw</Button>\r\n                                    </Form.FieldSet>\r\n                                    <div id=\"divHint\">\r\n                                        <p>For safety reasons it is required to approve new addresses before withdrawing is allowed.</p>\r\n                                        <p>A new address is approved by a deposit surpassing the configured limit ({this.state.walletSec} BTC).</p>\r\n                                        <p><b>Approved Addresses have no withdrawal limit.</b></p>\r\n                                    </div>\r\n                                </Form>\r\n                            </div>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button onClick={() => this.switchModalWDShow()}>Close</Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Wallet;","import React, { Component } from \"react\";\r\nimport { Card, Form } from 'tabler-react';\r\n\r\nclass AppProfile extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            firstname: \"\",\r\n            lastname: \"\",\r\n            mail: \"\",\r\n            phone: \"\",\r\n            creationdate: \"\",\r\n            birthday: \"\",\r\n            walletSec: \"\"\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            let res = await fetch('/profile', {\r\n                method: 'post',\r\n                headers: {\r\n                    'Accept': 'applcication/json',\r\n                    'Content-Type': 'applcication/json'\r\n                }\r\n            });\r\n\r\n            let result = await res.json();\r\n\r\n            console.log('profile')\r\n            if (result.success) {\r\n\r\n                this.setState({ firstname: result.data[0].firstname })\r\n                this.setState({ lastname: result.data[0].lastname })\r\n                this.setState({ mail: result.data[0].mail })\r\n                this.setState({ phone: result.data[0].phone })\r\n                this.setState({ creationdate: result.data[0].creationdate })\r\n                this.setState({ birthday: result.data[0].birthday })\r\n                this.setState({ walletSec: result.data[0].walletsec })\r\n\r\n                console.log(this.state)\r\n\r\n            }\r\n\r\n            this.forceUpdate();\r\n        }\r\n        catch (e) {\r\n            console.log('exc')\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"dashboard\">\r\n                <Card>\r\n                    <Card.Status color=\"blue\" side />\r\n                    <Card.Header>\r\n                        <Card.Title>Profile</Card.Title>\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        <Form>\r\n                            <Form.Input name=\"firstname\" label=\"First Name\" value={this.state.firstname} disabled isInline />\r\n                            <Form.Input name=\"lastname\" label=\"Last Name\" value={this.state.lastname} disabled isInline />\r\n                            <Form.Input name=\"email\" label=\"E-Mail\" icon=\"mail\" value={this.state.mail} disabled />\r\n                            <Form.Input name=\"phone\" label=\"Phone Number\" id=\"Phone Number\" icon=\"phone\" value={this.state.phone} disabled />\r\n                            <Form.Input name=\"registerDate\" label=\"Registered since\" icon=\"log-in\" disabled value={this.state.creationdate.substring(0,10)} />\r\n                            <Form.Input name=\"birthday\" label=\"Birthday\" disabled value={this.state.birthday.substring(0,10)} />\r\n                        </Form>\r\n                    </Card.Body>\r\n                </Card>\r\n                <Card>\r\n                    <Card.Status color=\"yellow\" side />\r\n                    <Card.Header>\r\n                        <Card.Title>Wallet Security</Card.Title>\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        <Form>\r\n                            <Form.Input name=\"withdrawalThreshold\" label=\"Withdrawal Threshold\" value={this.state.walletSec} icon=\"lock\" disabled isInline />\r\n                        </Form>\r\n                    </Card.Body>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AppProfile;","import React from 'react';\nimport { observer } from 'mobx-react';\nimport UserStore from './stores/UserStore';\nimport LoginForm from './LoginForm';\nimport Spinner from './spinner';\nimport './App.scss';\nimport Dashboard from './Dashboard/Dashboard';\nimport Navbar from './Dashboard/Navbar';\nimport TitleBar from './TitleBar';\nimport { BrowserRouter as Router, Route, Switch, Redirect, withRouter } from 'react-router-dom';\nimport Overview from './Dashboard/Overview';\nimport Wallet from './Dashboard/Wallet';\nimport Profile from './Dashboard/AppProfile';\nimport AppProfile from './Dashboard/AppProfile';\nimport { Alert } from 'tabler-react'\n\nclass App extends React.Component {\n  async componentDidMount() {\n    try {\n      let res = await fetch('/isLoggedIn', {\n        method: 'post',\n        headers: {\n          'Accept': 'applcication/json',\n          'Content-Type': 'applcication/json'\n        }\n      });\n\n      let result = await res.json();\n\n      if (result && result.success) {\n        UserStore.loading = false;\n        UserStore.isLoggedIn = true;\n        UserStore.username = result.username;\n      }\n      else {\n        UserStore.loading = false;\n        UserStore.isLoggedIn = false;\n      }\n    }\n    catch (e) {\n      UserStore.loading = false;\n      UserStore.isLoggedIn = false;\n    }\n\n  }\n\n  async doLogout() {\n\n    try {\n      let res = await fetch('/logout', {\n        method: 'post',\n        headers: {\n          'Accept': 'applcication/json',\n          'Content-Type': 'applcication/json'\n        }\n      });\n\n      let result = await res.json();\n\n      if (result && result.success) {\n        UserStore.isLoggedIn = false;\n        UserStore.username = '';\n      }\n    }\n    catch (e) {\n      console.log(e)\n    }\n\n  }\n\n  render() {\n\n    if (UserStore.loading) {\n      return null;\n      return (\n        <div className=\"app\">\n          <div className='loginContainer'>\n            Loading, please wait...\n            <Spinner\n              loading={true} color='#000000'\n            />\n          </div>\n        </div>\n      );\n    }\n\n    else {\n      // HERE YOU \n      if (UserStore.isLoggedIn) {\n        return (\n          <div className=\"all\">\n            <div className=\"content\" id=\"dashboard-content\">\n              <div className=\"titlebar\">\n                <TitleBar />\n              </div>\n              <Router>\n                <div className=\"navbar\">\n                  <Navbar\n                    onClick={() => this.doLogout()}\n                  />\n                </div>\n                <Route path='/' exact component={Overview}><Redirect to=\"/overview\" /></Route>\n                <Route path='/overview' exact component={Overview} />\n                <Route path='/wallet' exact component={Wallet} />\n                <Route path='/profile' exact component={AppProfile} />\n              </Router>\n              <div className=\"footer\">\n                <Alert type=\"danger\" icon=\"alert-triangle\">\n                  2FA Authentication is currently disabled - we are working on a solution!\n                </Alert>\n              </div>\n            </div>\n          </div>\n        );\n      }\n\n      return (\n        <div className=\"app\">\n          <div className=\"login\">\n            <div className=\"container\" ref={ref => (this.container = ref)}>\n              <article class=\"half\">\n                <h1>CryptoWallet</h1>\n                <h2>beta</h2>\n                <div class=\"tabs\">\n                  <span class=\"tab signin active\"><a href=\"#signin\">Sign in</a></span>\n                </div>\n                <div class=\"content\">\n                  <div class=\"signin-cont cont\">\n                    <LoginForm />\n                  </div>\n                </div>\n              </article>\n              <div class=\"half bg\"></div>\n            </div>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nexport default observer(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}