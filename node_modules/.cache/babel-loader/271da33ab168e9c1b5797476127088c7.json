{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\temp_e\\\\Projects\\\\React\\\\mythirdapp\\\\frontend\\\\src\\\\LoginForm.js\";\nimport React from 'react';\nimport InputField from './InputField';\nimport SubmitButton from './SubmitButton';\nimport UserStore from './stores/UserStore';\nimport Spinner from './spinner';\n\nclass LoginForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n      buttonDisabled: false,\n      loggingIn: false\n    };\n  }\n\n  setInputValue(property, val) {\n    val = val.trim();\n\n    if (val.length > 50) {\n      return;\n    }\n\n    this.setState({\n      [property]: val\n    });\n  }\n\n  resetForm() {\n    this.setState({\n      username: '',\n      password: '',\n      buttonDisabled: false\n    });\n  }\n\n  async doLogin() {\n    if (!this.state.username) {\n      return;\n    }\n\n    if (!this.state.password) {\n      return;\n    }\n\n    this.setState({\n      buttonDisabled: true,\n      loggingIn: true\n    });\n\n    try {\n      let res = await fetch('/login', {\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username: this.state.username,\n          password: this.state.password\n        })\n      });\n      let result = await res.json();\n\n      if (result && result.success) {\n        UserStore.isLoggedIn = true;\n        UserStore.username = result.username;\n      } else if (result && result.success === false) {\n        this.resetForm();\n        alert(result.msg);\n      }\n    } catch (e) {\n      console.log(e);\n      this.resetForm();\n    } finally {\n      this.setState({\n        loggingIn: false\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loginForm\",\n      children: [/*#__PURE__*/_jsxDEV(InputField, {\n        type: \"email\",\n        id: \"email\",\n        name: \"email\",\n        placeholder: \"Your email\",\n        value: this.state.username ? this.state.username : '',\n        onChange: val => this.setInputValue('username', val)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(InputField, {\n        type: \"password\",\n        id: \"password\",\n        name: \"password\",\n        placeholder: \"Your Password\",\n        value: this.state.password ? this.state.password : '',\n        onChange: val => this.setInputValue('password', val)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        id: \"remember\",\n        class: \"checkbox\",\n        checked: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"remember\",\n        children: \"Remember me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(SubmitButton, {\n        text: \"Sign In\",\n        disabled: this.state.buttonDisabled,\n        onClick: () => this.doLogin()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#\",\n        class: \"more\",\n        children: \"Forgot your password?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Spinner, {\n        loading: this.state.loggingIn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default LoginForm;","map":{"version":3,"sources":["D:/temp_e/Projects/React/mythirdapp/frontend/src/LoginForm.js"],"names":["React","InputField","SubmitButton","UserStore","Spinner","LoginForm","Component","constructor","props","state","username","password","buttonDisabled","loggingIn","setInputValue","property","val","trim","length","setState","resetForm","doLogin","res","fetch","method","headers","body","JSON","stringify","result","json","success","isLoggedIn","alert","msg","e","console","log","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport InputField from './InputField';\r\nimport SubmitButton from './SubmitButton';\r\nimport UserStore from './stores/UserStore';\r\nimport Spinner from './spinner';\r\n\r\nclass LoginForm extends React.Component{\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      username: '',\r\n      password: '',\r\n      buttonDisabled: false,\r\n      loggingIn: false\r\n    }\r\n  }\r\n\r\n  setInputValue (property, val) {\r\n    val = val.trim();\r\n    if (val.length > 50) {\r\n      return;\r\n    }\r\n    this.setState ({\r\n      [property]: val\r\n    })\r\n  }\r\n\r\n  resetForm(){\r\n    this.setState({\r\n      username: '',\r\n      password: '',\r\n      buttonDisabled: false,\r\n    })\r\n  }\r\n\r\n  async doLogin() {\r\n    if(!this.state.username) {\r\n      return;\r\n    }\r\n    if(!this.state.password) {\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      buttonDisabled: true,\r\n      loggingIn:true\r\n    })\r\n\r\n    try {\r\n        let res = await fetch('/login', {\r\n          method: 'post',\r\n          headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({\r\n            username: this.state.username,\r\n            password: this.state.password\r\n          })\r\n        });\r\n\r\n        let result = await res.json();\r\n        if (result && result.success) {\r\n          UserStore.isLoggedIn = true;\r\n          UserStore.username = result.username;\r\n        }\r\n\r\n        else if (result && result.success === false) {\r\n          this.resetForm();\r\n          alert(result.msg)\r\n        }\r\n    }\r\n    catch(e) {\r\n      console.log(e);\r\n      this.resetForm();\r\n    }\r\n    finally{\r\n      this.setState({\r\n        loggingIn:false\r\n      })\r\n    }\r\n  }\r\n\r\n  render(){\r\n    return (\r\n        <div className=\"loginForm\">\r\n          <InputField\r\n            type='email'\r\n            id = 'email'\r\n            name = 'email'\r\n            placeholder = 'Your email'\r\n            value={this.state.username ? this.state.username : ''}\r\n            onChange={(val) => this.setInputValue('username', val)}\r\n          />\r\n\r\n          <InputField\r\n            type='password'\r\n            id = 'password'\r\n            name = 'password'\r\n            placeholder = 'Your Password'\r\n            value={this.state.password ? this.state.password : ''}\r\n            onChange={(val) => this.setInputValue('password', val)}\r\n          />\r\n          \r\n          <input type=\"checkbox\" id=\"remember\" class=\"checkbox\" checked/>\r\n          <label for=\"remember\">Remember me</label>\r\n          \r\n          <SubmitButton\r\n              text='Sign In'\r\n              disabled={this.state.buttonDisabled}\r\n              onClick={() => this.doLogin()}\r\n          />\r\n\r\n          <a href=\"#\" class=\"more\">Forgot your password?</a>\r\n\r\n          <Spinner\r\n            loading={this.state.loggingIn}\r\n          />\r\n        </div>\r\n    );  \r\n  }\r\n}\r\n\r\nexport default LoginForm;\r\n"]},"metadata":{},"sourceType":"module"}