{"ast":null,"code":"import{jsx as _jsx}from\"react/jsx-runtime\";import _classCallCheck from\"D:/temp_e/Projects/React/mythirdapp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"D:/temp_e/Projects/React/mythirdapp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"D:/temp_e/Projects/React/mythirdapp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"D:/temp_e/Projects/React/mythirdapp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import _taggedTemplateLiteral from\"D:/temp_e/Projects/React/mythirdapp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  display: block;\\n  margin: 0 auto;\\n  border-color: red;\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React from\"react\";import{css}from\"@emotion/core\";import HashLoader from\"react-spinners/HashLoader\";// Can be a string as well. Need to ensure each key-value pair ends with ;\nvar override=css(_templateObject());var Spinner=/*#__PURE__*/function(_React$Component){_inherits(Spinner,_React$Component);var _super=_createSuper(Spinner);function Spinner(props){var _this;_classCallCheck(this,Spinner);_this=_super.call(this,props);_this.state={loading:_this.props.loading,color:_this.props.color};return _this;}//\"#022ea8\"\n_createClass(Spinner,[{key:\"render\",value:function render(){return/*#__PURE__*/_jsx(\"div\",{className:\"sweet-loading\",children:/*#__PURE__*/_jsx(HashLoader,{css:override,size:100,color:this.props.color,loading:this.props.loading})});}}]);return Spinner;}(React.Component);export default Spinner;","map":{"version":3,"sources":["D:/temp_e/Projects/React/mythirdapp/frontend/src/spinner.js"],"names":["React","css","HashLoader","override","Spinner","props","state","loading","color","Component"],"mappings":"+hCAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,KAAoB,eAApB,CACA,MAAOC,CAAAA,UAAP,KAAuB,2BAAvB,CAGA;AACA,GAAMC,CAAAA,QAAQ,CAAGF,GAAH,mBAAd,C,GAMMG,CAAAA,O,8GACJ,iBAAYC,KAAZ,CAAmB,yCACjB,uBAAMA,KAAN,EACA,MAAKC,KAAL,CAAa,CACXC,OAAO,CAAE,MAAKF,KAAL,CAAWE,OADT,CAEXC,KAAK,CAAE,MAAKH,KAAL,CAAWG,KAFP,CAAb,CAFiB,aAMlB,CACD;2DACS,CACP,mBACE,YAAK,SAAS,CAAC,eAAf,uBACE,KAAC,UAAD,EAAY,GAAG,CAAEL,QAAjB,CAA2B,IAAI,CAAE,GAAjC,CAAsC,KAAK,CAAE,KAAKE,KAAL,CAAWG,KAAxD,CAA+D,OAAO,CAAE,KAAKH,KAAL,CAAWE,OAAnF,EADF,EADF,CAKD,C,qBAfmBP,KAAK,CAACS,S,EAkB5B,cAAeL,CAAAA,OAAf","sourcesContent":["import React from \"react\";\r\nimport { css } from \"@emotion/core\";\r\nimport HashLoader from \"react-spinners/HashLoader\";\r\n\r\n\r\n// Can be a string as well. Need to ensure each key-value pair ends with ;\r\nconst override = css`\r\n  display: block;\r\n  margin: 0 auto;\r\n  border-color: red;\r\n`;\r\n\r\nclass Spinner extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: this.props.loading,\r\n      color: this.props.color\r\n    };\r\n  }\r\n  //\"#022ea8\"\r\n  render() {\r\n    return (\r\n      <div className=\"sweet-loading\">\r\n        <HashLoader css={override} size={100} color={this.props.color} loading={this.props.loading} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Spinner;"]},"metadata":{},"sourceType":"module"}